<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code Mind]]></title>
  <link href="http://kevinz.github.com/atom.xml" rel="self"/>
  <link href="http://kevinz.github.com/"/>
  <updated>2012-07-12T08:06:53+08:00</updated>
  <id>http://kevinz.github.com/</id>
  <author>
    <name><![CDATA[Kevin Zeng]]></name>
    <email><![CDATA[kevintech08@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix octopress git deploy issuse]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/12/fix-octopress-git-issuse/"/>
    <updated>2012-07-12T07:05:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/12/fix-octopress-git-issuse</id>
    <content type="html"><![CDATA[<p>已经习惯了在折腾中学习，把遇到的问题看成是学习的机会，有了这种心态，就
不怕麻烦了。昨天晚上为了解决octopress不能<code>rake deploy</code>的问题，搞了几个
小时，搞完了对git的分支的理解得到了提升。</p>

<p>解决完了再回头看，其实我的问题很sb，master branch本来只应该包括<em>deploy
目录里的内容，但我因为误操作把上层目录都变成了master branch，这样就会
在github上自己的blog项目内，看到很多本来不属于blog的文件。当然使用
<code>rake deploy</code>也会出现问题。之前瞎折腾了很久，浪费好多时间，结果还是读
源码解决了问题，Rakefile里<code>setup_github_page</code>和<code>push</code>任务看看，就知道
咋回事了。需要注意的是，除了</em>deploy的其它文件都在source branch里，因为
<code>setup_github_page</code>初始化时把master重命名成了source。</p>

<!-- more -->




<figure class='code'><figcaption><span>my solution  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$rm</span> -rf _deploy
</span><span class='line'><span class="nv">$mkdir</span> _deploy
</span><span class='line'><span class="nv">$cd</span> _deploy
</span><span class='line'><span class="nv">$git</span> init
</span><span class='line'><span class="nv">$echo</span> <span class="s2">&quot;test&quot;</span> &gt; index.html
</span><span class='line'><span class="nv">$git</span> branch -m master
</span><span class='line'><span class="nv">$git</span> commit -m <span class="s2">&quot;octopress init&quot;</span>
</span><span class='line'><span class="nv">$git</span> remote add origin git@github.com:username/username.github.com.git
</span><span class='line'><span class="nv">$git</span> push origin master
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Study on LVS kernel code - persistent]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/11/study-on-lvs-kernel-code/"/>
    <updated>2012-07-11T12:24:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/11/study-on-lvs-kernel-code</id>
    <content type="html"><![CDATA[<p>一直纠结于LVS使用persistent时，是以何为依据，决定一个新的连接请求的命运的：是被persistent管理，去到之前的real server，还是被调度算法重新调度，去到新的real server。
代码里其实写得非常清楚：</p>

<h2>Persistent in LVS(ipvs)</h2>

<ul>
<li>fwmark

<ul>
<li>&lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0> 这个六元组，最开始是写死的ip协议，第一个0是cport，第二个0是dport，就是不在乎cport和dport。</li>
</ul>
</li>
<li>Port zero service &lt;protocol,caddr,0,vaddr,0,daddr,0></li>
<li>non Port zero service

<ul>
<li>FTP &lt;caddr,0,vaddr,0,daddr,0></li>
<li>NON-FTP &lt;caddr,0,vaddr,vport,daddr,dport></li>
</ul>
</li>
</ul>


<!-- more -->


<p>  <br/>
我自己的理解，daddr和dport就是请求的目的地址和端口，如果客户端请求vaddr:vport，比如在浏览器上请求http://vaddr:vport,那daddr和dport就分别和vaddr和vport相同，
如果是透明模式，客户端不知道vip的存在，比如访问http://sina.com.cn，daddr就是sina.com.cn，dport就是80，这种透明模式一般都是通过fwmark的方式实现。</p>

<p>见代码17，21，77，80行。</p>

<figure class='code'><figcaption><span>/net/netfilter/ipvs/ip_vs_core.c  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * As far as we know, FTP is a very complicated network protocol, and</span>
</span><span class='line'><span class="cm">  * it uses control connection and data connections. For active FTP,</span>
</span><span class='line'><span class="cm">  * FTP server initialize data connection to the client, its source port</span>
</span><span class='line'><span class="cm">  * is often 20. For passive FTP, FTP server tells the clients the port</span>
</span><span class='line'><span class="cm">  * that it passively listens to,  and the client issues the data</span>
</span><span class='line'><span class="cm">  * connection. In the tunneling or direct routing mode, the load</span>
</span><span class='line'><span class="cm">  * balancer is on the client-to-server half of connection, the port</span>
</span><span class='line'><span class="cm">  * number is unknown to the load balancer. So, a conn template like</span>
</span><span class='line'><span class="cm">  * &lt;caddr, 0, vaddr, 0, daddr, 0&gt; is created for persistent FTP</span>
</span><span class='line'><span class="cm">  * service, and a template like &lt;caddr, 0, vaddr, vport, daddr, dport&gt;</span>
</span><span class='line'><span class="cm">  * is created for other persistent services.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="cm">/* Check if a template already exists */</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span> <span class="o">!=</span> <span class="n">FTPPORT</span><span class="p">)</span>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="cm">/* &lt;caddr,0,vaddr,vport,daddr,dport&gt; */</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>        <span class="cm">/* &lt;caddr,0,vaddr,0,daddr,0&gt; */</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ct</span> <span class="o">||</span> <span class="o">!</span><span class="n">ip_vs_check_template</span><span class="p">(</span><span class="n">ct</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * No template found or the dest of the connection</span>
</span><span class='line'><span class="cm">          * template is not available.</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">scheduler</span><span class="o">-&gt;</span><span class="n">schedule</span><span class="p">(</span><span class="n">svc</span><span class="p">,</span> <span class="n">skb</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">dest</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">IP_VS_DBG</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;p-schedule: no dest found.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * Create a template like &lt;protocol,caddr,0,</span>
</span><span class='line'><span class="cm">          * vaddr,vport,daddr,dport&gt; for non-ftp service,</span>
</span><span class='line'><span class="cm">          * and &lt;protocol,caddr,0,vaddr,0,daddr,0&gt;</span>
</span><span class='line'><span class="cm">          * for ftp service.</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span> <span class="o">!=</span> <span class="n">FTPPORT</span><span class="p">)</span>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="n">dest</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">ct</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">ct</span><span class="o">-&gt;</span><span class="n">timeout</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">timeout</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/* set destination with the found template */</span>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">ct</span><span class="o">-&gt;</span><span class="n">dest</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">dport</span> <span class="o">=</span> <span class="n">dest</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="cm">/*</span>
</span><span class='line'><span class="cm">      * Note: persistent fwmark-based services and persistent</span>
</span><span class='line'><span class="cm">      * port zero service are handled here.</span>
</span><span class='line'><span class="cm">      * fwmark template: &lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0&gt;</span>
</span><span class='line'><span class="cm">      * port zero template: &lt;protocol,caddr,0,vaddr,0,daddr,0&gt;</span>
</span><span class='line'><span class="cm">      */</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">union</span> <span class="n">nf_inet_addr</span> <span class="n">fwmark</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>              <span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span>
</span><span class='line'>          <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">fwmark</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* &lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0&gt; */</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* &lt;protocol,caddr,0,vaddr,0,daddr,0&gt; */</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ct</span> <span class="o">||</span> <span class="o">!</span><span class="n">ip_vs_check_template</span><span class="p">(</span><span class="n">ct</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * If it is not persistent port zero, return NULL,</span>
</span><span class='line'><span class="cm">          * otherwise create a connection template.</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">scheduler</span><span class="o">-&gt;</span><span class="n">schedule</span><span class="p">(</span><span class="n">svc</span><span class="p">,</span> <span class="n">skb</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">dest</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">IP_VS_DBG</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;p-schedule: no dest found.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * Create a template according to the service</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">union</span> <span class="n">nf_inet_addr</span> <span class="n">fwmark</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>                  <span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span>
</span><span class='line'>              <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">fwmark</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">ct</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">ct</span><span class="o">-&gt;</span><span class="n">timeout</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">timeout</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/* set destination with the found template */</span>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">ct</span><span class="o">-&gt;</span><span class="n">dest</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">dport</span> <span class="o">=</span> <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Collection of network performance tuning tools]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/11/collection-of-network-performance-tuning-tools/"/>
    <updated>2012-07-11T08:14:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/11/collection-of-network-performance-tuning-tools</id>
    <content type="html"><![CDATA[<h2>Performance Testing</h2>

<ul>
<li><a href="https://github.com/wangbin579/tcpcopy/">Tcpcopy</a>

<ul>
<li><a href="https://code.google.com/p/tcpcopy">old version on googlecode</a></li>
<li>It is an online TCP duplication tool and can be used for testing (using netlink and raw
sockets).And the author claimed it&#8217;s better than <a href="http://httpd.apache.org/docs/2.0/programs/ab.html">ab</a>.</li>
</ul>
</li>
<li><a href="http://redmine.lighttpd.net/projects/weighttp/wiki">Weighhttp</a></li>
</ul>


<h2>System Inspecting</h2>

<ul>
<li><a href="https://www.linuxpowertop.org/powertop/">PowerTop</a></li>
<li><a href="https://latencytop.org">LatencyTop</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=893">Introduction</a></li>
</ul>
</li>
<li><a href="http://sourceware.org/systemtap/">Systemtap</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=477">Introduction</a></li>
<li><a href="http://www.slideshare.net/mryufeng/systemtap">Slides</a></li>
</ul>
</li>
</ul>


<!-- more -->


<h2>Network Inspecting</h2>

<ul>
<li><a href="http://www.percona.com/docs/wiki/tcprstat:start">tcprstat</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=728">Introduction</a></li>
</ul>
</li>
</ul>


<h2>Hardware Inspecting</h2>

<ul>
<li><a href="http://software.intel.com/en-us/articles/intel-64-architecture-processor-topology-enumeration/">cpu-topology</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=460">Introduction</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netfilter hello world module]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/07/netfilter-hello-world-module/"/>
    <updated>2012-07-07T23:16:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/07/netfilter-hello-world-module</id>
    <content type="html"><![CDATA[<p>对于linux网络的学习，学下写netfilter module更有利于理解，下面开始实战。</p>

<div><script src='https://gist.github.com/3066821.js?file='></script>
<noscript><pre><code>#define __KERNEL__
#define MODULE

#include &lt;linux/module.h&gt;
#include &lt;linux/kernel.h&gt;
#include &lt;linux/netfilter_ipv4.h&gt;
#include &lt;linux/skbuff.h&gt;
#include &lt;linux/udp.h&gt;
#include &lt;linux/ip.h&gt;


static struct nf_hook_ops nfho;      //struct holding set of hook function options
static struct sk_buff *sock_buff;
static struct udphdr *udp_header;
static struct iphdr *ip_header;

//function to be called by hook
unsigned int hook_func(unsigned int hooknum,struct sk_buff **skb, const struct net_device *in, const struct net_device *out, int (*okfn) (struct sk_buff *))
{
    sock_buff = *skb; 
    ip_header = (struct iphdr *)skb_network_header(sock_buff);    
    if(!sock_buff){
        return NF_ACCEPT;
    }
    if(ip_header-&gt;protocol == 17) {
        udp_header = (struct udphdr *)skb_transport_header(sock_buff);
        printk(KERN_INFO &quot;got udp packet.\n&quot;);
        return NF_DROP;
    }else{
        printk(KERN_INFO &quot;packet accept.\n&quot;);
        return NF_ACCEPT;
    }
}

int init_module(void)
{
    printk(KERN_INFO &quot;register hello netfilter module.\n&quot;);
    nfho.hook = hook_func;
    nfho.hooknum = 0 ; // NF_IP_PRE_ROUTING
    nfho.pf = PF_INET;
    nfho.priority = NF_IP_PRI_FIRST;
    nf_register_hook(&amp;nfho);
    return 0;
}

void cleanup_module(void)
{
    printk(KERN_INFO &quot;cleanup hello netfilter module.\n&quot;);
    nf_unregister_hook(&amp;nfho); 
}
</code></pre></noscript></div>




<!-- more -->


<div><script src='https://gist.github.com/3066825.js?file='></script>
<noscript><pre><code>obj-m := hello.o
KDIR := /lib/modules/$(shell uname -r)/build
PWD := $(shell pwd)
default:
    $(MAKE) -C $(KDIR) SUBDIRS=$(PWD) modules

</code></pre></noscript></div>


<p>然后就是</p>

<figure class='code'><figcaption><span>install the module  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#make</span>
</span><span class='line'><span class="c">#insmod hello.ko </span>
</span></code></pre></td></tr></table></div></figure>


<p>我的环境(archlinux64 3.31-ck)编译加载成功，但貌似会导致kernel crash，
哈哈，后面再解决吧，have fun。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Solarized Color Schemea under ArchLinux and Awesome]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/use-solarized-color-schemea-under-archlinux-and-awesome/"/>
    <updated>2012-07-05T17:34:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/use-solarized-color-schemea-under-archlinux-and-awesome</id>
    <content type="html"><![CDATA[<p>貌似<a href="http://www.solarized.com/">solarized</a>已经火了很久，相见狠晚啊，曾
经多么想调整下awesome的focus配色，让它不那么黯然，发现很难，现在终于可以轻松搞定
了。说实话，看不太懂官方网站上的说明，也没力气去了解，发挥下拿来主义吧。</p>

<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-2">
    <img src="http://kevinz.github.com/images/post_img/term.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-2" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/term.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-2").hide();
    jQuery("#image-dialog-2").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-2").click(function() {
      jQuery("#image-dialog-2").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/term.png" width="1680" height="1050"/>
</div>



<!-- more -->


<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-3">
    <img src="http://kevinz.github.com/images/post_img/emacs.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-3" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/emacs.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-3").hide();
    jQuery("#image-dialog-3").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-3").click(function() {
      jQuery("#image-dialog-3").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/emacs.png" width="1680" height="1050"/>
</div>





<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-4">
    <img src="http://kevinz.github.com/images/post_img/vim.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-4" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/vim.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-4").hide();
    jQuery("#image-dialog-4").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-4").click(function() {
      jQuery("#image-dialog-4").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/vim.png" width="1680" height="1050"/>
</div>





<figure class='code'><figcaption><span>Put into .Xresources </span><a href='https://raw.github.com/altercation/solarized/master/xresources-colors-solarized/Xresources'>Xresources </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!! drop in Solarized colorscheme <span class="k">for </span>Xresources/Xdefaults
</span><span class='line'>
</span><span class='line'>!!SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   L*A*B      RGB         HSB
</span><span class='line'>!!--------- ------- ---- -------  ----------- ---------- ----------- -----------
</span><span class='line'>!!base03    <span class="c">#002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21</span>
</span><span class='line'>!!base02    <span class="c">#073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26</span>
</span><span class='line'>!!base01    <span class="c">#586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46</span>
</span><span class='line'>!!base00    <span class="c">#657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51</span>
</span><span class='line'>!!base0     <span class="c">#839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59</span>
</span><span class='line'>!!base1     <span class="c">#93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63</span>
</span><span class='line'>!!base2     <span class="c">#eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93</span>
</span><span class='line'>!!base3     <span class="c">#fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99</span>
</span><span class='line'>!!yellow    <span class="c">#b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71</span>
</span><span class='line'>!!orange    <span class="c">#cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80</span>
</span><span class='line'>!!red       <span class="c">#dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86</span>
</span><span class='line'>!!magenta   <span class="c">#d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83</span>
</span><span class='line'>!!violet    <span class="c">#6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77</span>
</span><span class='line'>!!blue      <span class="c">#268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82</span>
</span><span class='line'>!!cyan      <span class="c">#2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63</span>
</span><span class='line'>!!green     <span class="c">#859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60</span>
</span><span class='line'>
</span><span class='line'><span class="c">#define S_base03        #002b36</span>
</span><span class='line'><span class="c">#define S_base02        #073642</span>
</span><span class='line'><span class="c">#define S_base01        #586e75</span>
</span><span class='line'><span class="c">#define S_base00        #657b83</span>
</span><span class='line'><span class="c">#define S_base0         #839496</span>
</span><span class='line'><span class="c">#define S_base1         #93a1a1</span>
</span><span class='line'><span class="c">#define S_base2         #eee8d5</span>
</span><span class='line'><span class="c">#define S_base3         #fdf6e3</span>
</span><span class='line'><span class="c">#define S_yellow        #b58900</span>
</span><span class='line'><span class="c">#define S_orange        #cb4b16</span>
</span><span class='line'><span class="c">#define S_red           #dc322f</span>
</span><span class='line'><span class="c">#define S_magenta       #d33682</span>
</span><span class='line'><span class="c">#define S_violet        #6c71c4</span>
</span><span class='line'><span class="c">#define S_blue          #268bd2</span>
</span><span class='line'><span class="c">#define S_cyan          #2aa198</span>
</span><span class='line'><span class="c">#define S_green         #859900</span>
</span><span class='line'>
</span><span class='line'>*background:            S_base03
</span><span class='line'>...
</span><span class='line'>URxvt.
</span><span class='line'>...
</span><span class='line'>Emacs.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Use solarized in emacs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(require 'color-theme-solarized)
</span><span class='line'>(color-theme-solarized-light)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drawing Message Sequence Chart in geek way]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/drawing-message-sequence-chart-in-geek-way/"/>
    <updated>2012-07-05T09:00:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/drawing-message-sequence-chart-in-geek-way</id>
    <content type="html"><![CDATA[<p>相信很多人跟我一样，讨厌写文档，讨厌画图，所以喜欢
<a href="http://www.graphviz.org/">graphviz</a>，<a href="www.doxygen.org/">doxygen</a>这些
自动化工具来生成文档及图形。这两天要画一些很复杂的顺序图，找到我<a href="https://wiki.archlinux.org/index.php/Lightweight_Applications_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29">喜欢</a>的
工具，<a href="http://www.mcternan.me.uk/mscgen/">Mscgen</a>，专为不爱画图，
追求效率的geek设计。</p>

<div><script src='https://gist.github.com/3053976.js?file='></script>
<noscript><pre><code>#MSC for lvs in DR transparent mode
msc{
        hscale = &quot;2&quot;;
        Client,LB,RS,OS;

        Client=&gt;Client [ label = &quot;req(oip:oport)&quot;];
        Client=&gt;Client [ label = &quot;routeto(LB)&quot;];
        Client-&gt;LB [ label = &quot;(cip:cport)-&gt;(oip:oport)&quot;];
        LB=&gt;LB     [ label = &quot;iptable-&gt;fwmark(dst==oip,dst_port=oport)&quot;];
        LB=&gt;LB     [ label = &quot;(cip:cport)-&gt;(oip:oport)+fwmark&quot;];
        LB=&gt;LB     [ label = &quot;trick kernel to receive()&quot;];
        LB=&gt;LB     [ label = &quot;is_match(LB-&gt;fwmark,packet-&gt;fwmark)&quot;];
        LB=&gt;LB     [ label = &quot;belongs_to_an_active_conn?&quot;];
        LB=&gt;LB     [ label = &quot;is_new_conn?&quot;];
        LB=&gt;LB     [ label = &quot;is_persistent?&quot;];
        LB=&gt;LB     [ label = &quot;do_schedule()&quot;];
        LB=&gt;LB     [ label = &quot;decide_rs()&quot;];
        LB=&gt;LB     [ label = &quot;modify-mac(vmac-&gt;rmac)&quot;];
        
        LB-&gt;RS     [ label = &quot;(cip:cport)-&gt;(oip:oport)&quot;];
        --- [ label = &quot;Packet is delivered to real server&quot;];
        ...;
        RS=&gt;RS     [ label = &quot;nf_hook-&gt;dnat(oip-&gt;rip,oport-&gt;rport)&quot;];
        RS=&gt;RS     [ label = &quot;receive()&quot;];
        RS=&gt;RS     [ label = &quot;proxy_www(URI)&quot;];
        RS-&gt;OS     [ label = &quot;(rip_www:rport_www)-&gt;(oip:oport)&quot;];
        --- [ label = &quot;Packet is delivered to the original server&quot;];
        OS-&gt;RS     [ label = &quot;(oip:oport)-&gt;(rip_www:rport_www)&quot;];
        RS=&gt;RS     [ label = &quot;route_to(LB or GW)&quot;];
        --- [ label = &quot;Packet goes back to real server&quot;];
        RS-&gt;LB [ label = &quot;(oip:oport)-&gt;(cip:cport)&quot;];
        RS&gt;&gt;Client [ label = &quot;possible path:(oip:oport)-&gt;(cip:cport)&quot;];
        LB-&gt;Client [ label = &quot;(oip:oport)-&gt;(cip:cport)&quot;];
        --- [ label = &quot;Packet goes back to the client&quot;];
}


</code></pre></noscript></div>




<!-- more -->


<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-1">
    <img src="http://kevinz.github.com/images/post_img/lvs_transp.png"
         width="600" height="429"
         alt="Click me."/>
  </a>
  <div id="image-dialog-1" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/lvs_transp.png"
         width="1200" height="857"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-1").hide();
    jQuery("#image-dialog-1").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1240,
      minHeight: 897,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-1").click(function() {
      jQuery("#image-dialog-1").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/lvs_transp.png" width="1200" height="857"/>
</div>


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog with jekyll octopress emacs on github]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/begin-to-use-jekyll/"/>
    <updated>2012-07-05T07:59:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/begin-to-use-jekyll</id>
    <content type="html"><![CDATA[<p>最近学习的动力大爆发，学了不少东西，应该记录并分享出来，把自己挂在
github上的静态页面换成了强大的jekyll+octopress，捣鼓下开始写东西了，用markdown写
blog的感觉应该很棒。</p>

<p>接下来是开发环境，没错，是按写代码的方式写blog，我用的是emacs +
mardown-mode,非常爽的组合。因为我是用archlinux，用yaourt怎么
一个方便了得。</p>

<figure class='code'><figcaption><span>install ibus-el  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yaourt -S ibus-el
</span></code></pre></td></tr></table></div></figure>




<!-- more -->




<figure class='code'><figcaption><span>ibus-mode configuration </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(require 'ibus)
</span><span class='line'>(add-hook 'after-init-hook 'ibus-mode-on)
</span><span class='line'>(global-set-key (kbd "C-\\") 'ibus-toggle)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Enable markdown mode </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(autoload 'markdown-mode "markdown-mode.el"
</span><span class='line'>   "Major mode for editing Markdown files" t)
</span><span class='line'>(setq auto-mode-alist
</span><span class='line'>   (cons '("\\.text"  . markdown-mode) auto-mode-alist))
</span><span class='line'>
</span><span class='line'>(setq auto-mode-alist
</span><span class='line'>      (cons '("\\.md"  . markdown-mode) auto-mode-alist))</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
