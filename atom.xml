<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code Mind]]></title>
  <link href="http://kevinz.github.com/atom.xml" rel="self"/>
  <link href="http://kevinz.github.com/"/>
  <updated>2012-07-29T19:19:45+08:00</updated>
  <id>http://kevinz.github.com/</id>
  <author>
    <name><![CDATA[Kevin Zeng]]></name>
    <email><![CDATA[kevintech08@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[how virtualbox work with linux-ck]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/29/virtualbox-work-with-linux-ck/"/>
    <updated>2012-07-29T18:29:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/29/virtualbox-work-with-linux-ck</id>
    <content type="html"><![CDATA[<p>解决了virtualbox在linux-ck里使用的问题，做一下记录。我用的是
linux-ck-corex内核，直接通过
<a href="https://wiki.archlinux.org/index.php/Repo-ck">repo-ck</a>装好，不过也可
以通过<a href="http://aur.archlinux.org/packages.php?ID=50911">aur</a>来折腾下，
调整下内核参数啥的。这里主要记录下如何让virtualbox正常工作，<a href="https://wiki.archlinux.org/index.php/Linux-ck#Running_Virtualbox_with_Linux-ck">这篇</a>提到了
一些相关内容，做一点补充:</p>

<h2>编译vboxdrv及其它模块</h2>

<ul>
<li>记得装对应的linux-ck-headers，我装的是linux-ck-corex-headers，可能
要先fuck gfw。</li>
<li>编译方法有所变化，老版的virtualbox是用<code>vboxbuild</code>，新版改成了<code>dkms
install vboxhost/4.1.18</code>。</li>
<li>解决编译vboxdrv报错问题。

<ul>
<li>headers安装目录默认是在<code>/usr/src/kernel_full_name</code>，在
<code>/lib/modules/kernel_full_name</code>下，执行<code>ln -s
/usr/src/kernel_full_name build</code>，编译应该就ok了。</li>
</ul>
</li>
<li>老版本的virtualbox编译好的modules是存在于<code>/lib/modules/extramodules</code>
下，新的是在<code>/lib/modules/kernel/misc</code>下。</li>
<li>add/append your user into vboxusers group</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[了解lvs调试]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/26/lvs-debug-howto/"/>
    <updated>2012-07-26T21:32:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/26/lvs-debug-howto</id>
    <content type="html"><![CDATA[<p>虽然对lvs的实现代码也算是心里有数了，但遇到一些具体问题时还拿不准，这时候就想到了lvs提供的调试功能，
是内核提供的一个选项。一般发行版默认是没打开的，至少我接触的suse enterprice和archlinux都是关闭
了ip_vs_debug，一起来看看怎么启用吧。</p>

<figure class='code'><figcaption><span>kernel config  </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CONFIG_IP_VS_DEBUG=y</span></code></pre></td></tr></table></div></figure>


<p>在默认的config文件里找到这一项，可能是注释状态，改好后，就可以开始编译内核了，这个选项不是m，必须重新
编译产生新内核，在用<code>mkinitcpio -k kernel_full_name -c config</code>或者<code>mkinitrd -k kernel_full_name
</code>，前面是针对archlinux的，后面是针对suse的，这里有坑，此处略去1000字，反正记得如果用新内核启动，出现
找不到root的情况，八成是initrd做得有问题，fs相关的modules的问题。</p>

<p>新内核一切安好后，就可以玩lvs的调试功能了。先运行下<code>ipvsadm</code>，再<code>lsmod</code>看下<code>ip_vs</code>是否已经加载了。
再后面，就可以检查期待已久的调试选项了</p>

<figure class='code'><figcaption><span>ip_vs debug in /proc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/proc/sys/net/ipv4/vs/debug_level</span></code></pre></td></tr></table></div></figure>


<p><code>cat debug_level</code>一下，默认值是0，以后可以通过sysctl来更改默认值，下面讲下这个值的含义:</p>

<figure class='code'><figcaption><span>ip_vs_core.c  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'> <span class="n">IP_VS_DBG_BUF</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;Forward ICMP: failed checksum from %s!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">IP_VS_DBG_ADDR</span><span class="p">(</span><span class="n">af</span><span class="p">,</span> <span class="n">snet</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面是一个debug macro的调用的例子，下面是宏的具体定义：</p>

<figure class='code'><figcaption><span>ip_vs.h  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#ifdef CONFIG_IP_VS_DEBUG</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">int</span> <span class="n">ip_vs_get_debug_level</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG(level, msg...)         \</span>
</span><span class='line'><span class="cp">    do {                     \</span>
</span><span class='line'><span class="cp">     if (level &lt;= ip_vs_get_debug_level())    \</span>
</span><span class='line'><span class="cp">         printk(KERN_DEBUG &quot;IPVS: &quot; msg);  \</span>
</span><span class='line'><span class="cp">    } while (0)</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG_RL(msg...)             \</span>
</span><span class='line'><span class="cp">    do {                     \</span>
</span><span class='line'><span class="cp">     if (net_ratelimit())            \</span>
</span><span class='line'><span class="cp">         printk(KERN_DEBUG &quot;IPVS: &quot; msg);  \</span>
</span><span class='line'><span class="cp">    } while (0)</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG_PKT(level, pp, skb, ofs, msg)      \</span>
</span><span class='line'><span class="cp">    do {                     \</span>
</span><span class='line'><span class="cp">     if (level &lt;= ip_vs_get_debug_level())    \</span>
</span><span class='line'><span class="cp">     pp-&gt;debug_packet(pp, skb, ofs, msg); \</span>
</span><span class='line'><span class="cp">    } while (0)</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG_RL_PKT(level, pp, skb, ofs, msg)   \</span>
</span><span class='line'><span class="cp">    do {                     \</span>
</span><span class='line'><span class="cp">     if (level &lt;= ip_vs_get_debug_level() &amp;&amp;  \</span>
</span><span class='line'><span class="cp">     net_ratelimit())            \</span>
</span><span class='line'><span class="cp">     pp-&gt;debug_packet(pp, skb, ofs, msg); \</span>
</span><span class='line'><span class="cp">    } while (0)</span>
</span><span class='line'><span class="cp">#else    </span><span class="cm">/* NO DEBUGGING at ALL */</span><span class="cp"></span>
</span><span class='line'><span class="cp">#define IP_VS_DBG(level, msg...)  do {} while (0)</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG_RL(msg...)  do {} while (0)</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG_PKT(level, pp, skb, ofs, msg)      do {} while (0)</span>
</span><span class='line'><span class="cp">#define IP_VS_DBG_RL_PKT(level, pp, skb, ofs, msg)   do {} while (0)</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以清晰的看到，打印debug日志的条件是<code>level &lt;= ip_vs_get_debug_level()</code>，这个函数调用的返回值就是
<code>/proc/sys/net/ipv4/vs/debug_level</code>，万物皆文件的理念又体现了。
可见level的值越小，其优先级越高，查了一遍ip_vs的相关代码，level最大值不过12，也就是说，
只要把<code>/proc/sys/net/ipv4/vs/debug_level</code>设置成12，就能保证所有ip_vs的日志输出了，但一般没那个必要。</p>

<figure class='code'><figcaption><span>set debug_level to 12 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 12 > /proc/sys/net/ipv4/vs/debug_level</span></code></pre></td></tr></table></div></figure>


<p>对了，日志输出是在dmesg。</p>

<p>好了，方法就差不多是这些了，接下来就边看代码，边测试，边看输出吧。
have fun.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学习万兆以太网，硬件和优化方法]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/15/hardware-and-10gb-network/"/>
    <updated>2012-07-15T11:34:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/15/hardware-and-10gb-network</id>
    <content type="html"><![CDATA[<p>上周末去杭州参加了<a href="http://adc.taobao.com/">ADC</a>，收获不小，关注的几个
topic都和万兆网有关。最近也在做用LVS替换F5的调研，对性能的要求非常高，
于是开始关注起10Gbe，记录一些资料和心得。</p>

<h2>个人关注点</h2>

<ul>
<li><a href="https://speakerdeck.com/u/gekben/p/by-intel">拥抱万兆以太网时代 - 探索英特尔® 至强® 处理器平台上的应用性能优化</a>

<ul>
<li>图片缩放及gzip的增强</li>
<li>E5-2600 DDIO这个绝对是重点，对网络收发性能提升明显</li>
<li>性价比高的10G BASE-T会逐渐成为主流</li>
</ul>
</li>
<li><a href="https://speakerdeck.com/u/gekben/p/lvs-used-in-taobao">LVS在淘宝环境中的应用</a>

<ul>
<li>FULLNAT模式，对大型网络降低运维难度非常好，但对LVS的改造很大，增加了复杂性</li>
<li>SynProxy，在lvs上实现syn cookie防御机制，不明白为什么要做在这里</li>
<li>taobao也没用上sandy bridge，还是E5640+intel 82599万兆卡</li>
<li>多队列网卡，每个core绑定网卡的一个队列</li>
<li>KeepAlived增强，select->epoll,localaddr</li>
<li>Cluster，因为real server本身无状态，水平扩容好做，OSPF</li>
<li>4/7层结合，lvs+nginx，nginx做7层业务负载</li>
</ul>
</li>
</ul>


<h2>硬件</h2>

<ul>
<li><a href="http://storage.chinabyte.com/447/12275447.shtml">介绍</a>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Sandy_Bridge_%28microarchitecture%29">sandy bridge</a> cpu列表</li>
<li><a href="http://www.intel.com/content/www/us/en/network-adapters/gigabit-network-adapters/ethernet-x520.html">x520</a></li>
<li><a href="http://ark.intel.com/products/58954/Intel-Ethernet-Converged-Network-Adapter-X540-T2">x540</a></li>
<li><a href="http://www.emulex.com/products/10gbe-network-adapters-nic/emulex-branded/oce11102-nt/overview.html">emulex 手头正好有这块卡</a></li>
</ul>
</li>
</ul>


<h2>优化</h2>

<ul>
<li>intel那个slides里有几个建议

<ul>
<li>Process affinity - socket</li>
<li>Interrupts affinity - socket</li>
<li>Disable LLDPAD,IPTABLES,IP6TABLES,SELINUX,IRQBALANCE</li>
</ul>
</li>
<li><a href="http://timetobleed.com/useful-kernel-and-driver-performance-tweaks-for-your-linux-server/">Linux kernel and driver</a></li>
<li><a href="http://www.linuxfoundation.org/collaborate/workgroups/networking">GRO,GSO,TSO&#8230;</a></li>
<li>Papers

<ul>
<li><a href="http://www.google.com.hk/url?sa=t&amp;rct=j&amp;q=10Gbe+linux+optimization&amp;source=web&amp;cd=1&amp;ved=0CFQQFjAA&amp;url=http%3A%2F%2Fdocs.redhat.com%2Fdocs%2Fen-US%2FRed_Hat_Enterprise_Linux%2F6%2Fpdf%2FPerformance_Tuning_Guide%2FRed_Hat_Enterprise_Linux-6-Performance_Tuning_Guide-en-US.pdf&amp;ei=3D4RUKmWJ6O3iQed2YHYCw&amp;usg=AFQjCNGRhggpqYuUP0LQwoQE1uofWlN2dQ">RedHat</a></li>
<li><a href="http://www.google.com.hk/url?sa=t&amp;rct=j&amp;q=10Gbe+linux+optimization&amp;source=web&amp;cd=5&amp;ved=0CGUQFjAE&amp;url=http%3A%2F%2Fakashi.ci.i.u-tokyo.ac.jp%2Flab%2Fcmsdesigner%2Fdlfile.php%3Fentryname%3Dpublic%26entryid%3D00096%26fileid%3D00000001%26%2Fysn-camera.pdf&amp;ei=3D4RUKmWJ6O3iQed2YHYCw&amp;usg=AFQjCNGXO4wm2DQ8A6cAg1IsVzjbGjzvDg">Google</a></li>
<li><a href="http://www.kernel.org/doc/ols/2009/ols2009-pages-169-184.pdf">IBM</a></li>
</ul>
</li>
</ul>


<p>先记录到这里，边实践边补充。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在archlinux里定制编译内核]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/14/customize-kernel-in-arch-linux/"/>
    <updated>2012-07-14T16:54:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/14/customize-kernel-in-arch-linux</id>
    <content type="html"><![CDATA[<p>心血来潮升级到
<a href="http://repo-ck.com/x86_64/linux-ck-corex-3.4.4-4-x86_64.pkg.tar.xz">linux-ck_3.4.4-4</a>
后，发现<code>pm-suspend</code>出问题了，可以<code>suspend</code>，但<code>resume</code>后显示屏亮不起
来，其它部分都<code>resume</code>成功了，可以隐约看见一些窗口的黑影。于是我又开始
折腾了，参考了
<a href="https://bbs.archlinux.org/viewtopic.php?id=143545">这篇</a>，插句题外话，
不知道不是巧合，好多问题都是在archlinux的相关论坛上找到了答案，都是一帮爱折腾的同好。</p>

<p>不幸的是，<a href="https://bbs.archlinux.org/viewtopic.php?id=143545">这篇</a>把
我引导向了错误的方向，决定把kernel降级到3.3.x。因为我用的不是官核，不
好找old archive，必须重新编译3.3.x-ck的内核，官方的old archives可以在
<a href="http://arm.konnichi.com/search/">这里</a>寻觅到。</p>

<p>拜<a href="https://wiki.archlinux.org/index.php/Arch_Build_System">Arch Build System</a>
所赐，编译、打包、patch的步骤都可以内置了，对于kernel也是一样。贴一部
分PKGBUILD文件的内容，是从
<a href="http://repo-ck.com/PKG_source/linux-ck/linux-ck-3.3.8-1.src.tar.gz">repo-ck的archive</a>
里找到的。</p>

<!-- more -->




<figure class='code'><figcaption><span>PKGBUILD </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>### PATCH AND BUILD OPTIONS
</span><span class='line'>_makenconfig="n"  # tweak kernel options prior to a build via nconfig
</span><span class='line'>_localmodcfg="n"  # compile ONLY probed modules
</span><span class='line'>_use_current="n"  # use the current kernel's .config file
</span><span class='line'>_BFQ_enable_="n"  # enable BFQ as the default I/O scheduler
</span><span class='line'>
</span><span class='line'>pkgname=linux-ck
</span><span class='line'>true && pkgname=(linux-ck linux-ck-headers)
</span><span class='line'>_kernelname=-ck
</span><span class='line'>_basekernel=3.3
</span><span class='line'>pkgver=${_basekernel}.8
</span><span class='line'>pkgrel=1
</span><span class='line'>arch=('i686' 'x86_64')
</span><span class='line'>url="https://wiki.archlinux.org/index.php/Linux-ck"
</span><span class='line'>license=('GPL2')
</span><span class='line'>options=('!strip')
</span><span class='line'>_ckpatchversion=1
</span><span class='line'>_ckpatchname="patch-${_basekernel}-ck${_ckpatchversion}"
</span><span class='line'>_bfqpath="http://algo.ing.unimo.it/people/paolo/disk_sched/patches/3.3.0-v3r3"
</span><span class='line'>source=("http://www.kernel.org/pub/linux/kernel/v3.x/linux-3.3.tar.xz"
</span><span class='line'>"http://www.kernel.org/pub/linux/kernel/v3.x/patch-${pkgver}.xz"
</span><span class='line'>"http://ck.kolivas.org/patches/3.0/3.3/${_basekernel}-ck${_ckpatchversion}/${_ckpatchname}.bz2"
</span><span class='line'>'linux-ck.preset'
</span><span class='line'>'config' 'config.x86_64'
</span><span class='line'>'change-default-console-loglevel.patch'
</span><span class='line'>'i915-fix-ghost-tv-output.patch'
</span><span class='line'>'ext4-options.patch'
</span><span class='line'>'fix-acerhdf-1810T-bios.patch'
</span><span class='line'>"${_bfqpath}/0001-block-cgroups-kconfig-build-bits-for-BFQ-v3r3-3.3.patch"
</span><span class='line'>"${_bfqpath}/0002-block-introduce-the-BFQ-v3r3-I-O-sched-for-3.3.patch")
</span><span class='line'>sha256sums=('355df2085626cdf0083c4bc0fe3017419034b6db5cce6f437ae8234a5e90b40c'
</span><span class='line'>            '4bbd173c995f44cb1bc5b002293765e8d8f9f076ae801f35cf456da9f0eba06d'
</span><span class='line'>            'dd23a8e0fc6cdb393a9659d5d097c27e1ff5a0f30d0fe6a3441512a9bf6d00cb'
</span><span class='line'>            'c2cf8cc2600502de348f3dc3aae9a3bde5486759db15cb8a93df7aa35bd6e7da'
</span><span class='line'>            '253b11d36850a9c06ad8861a339da8895ddbb875d4e61579447a26f13423a160'
</span><span class='line'>            '0f6def8badb9939ddb042657fd767c3a07ea7c291ed795935ebc8f81255231d7'
</span><span class='line'>            'b9d79ca33b0b51ff4f6976b7cd6dbb0b624ebf4fbf440222217f8ffc50445de4'
</span><span class='line'>            '9ccadbe3eb30bb283af3eb869c3a4bdb764628854811cc616a2e02e9ef398705'
</span><span class='line'>            '0f15e7462b5d2650c354580920978228b3092bcf47e20e600242c8ca102df6f5'
</span><span class='line'>            'f77e1a1f2d955f0499dc2957d1d65a3eb931212a13948b33916332296d0e4a7a'
</span><span class='line'>            '179e159deaaa3976f5e5e329a640050b9803fef3cc77f8588a949b28c732c5ad'
</span><span class='line'>            'a401732b5bc36eeccbaab86b216295d0ce0b30b8afdae66d8f59a382689da6a4')
</span><span class='line'>build() {
</span><span class='line'>  cd "${srcdir}/linux-${_basekernel}"
</span><span class='line'>
</span><span class='line'>  msg "Patching with upstream patch ${_basekernel} to ${_basekernel}.4"
</span><span class='line'>  # add upstream patch
</span><span class='line'>  #patch -p1 -i "${srcdir}/patch-${pkgver}"
</span><span class='line'>
</span><span class='line'>  # add latest fixes from stable queue, if needed
</span><span class='line'>  #http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git
</span><span class='line'>
</span><span class='line'>  ### Patch with BFQ IO Scheduler
</span><span class='line'>  msg "Patching source with BFQ patches"
</span><span class='line'>  #for p in $(ls ${srcdir}/000{1,2}-block*.patch); do
</span><span class='line'>  #   patch -Np1 -i $p
</span><span class='line'>  #done
</span><span class='line'>
</span><span class='line'>  ### Clean tree and copy ARCH config over
</span><span class='line'>  msg "Running make mrproper to clean source tree"
</span><span class='line'>  make mrproper
</span><span class='line'>
</span><span class='line'>  if [ "${CARCH}" = "x86_64" ]; then
</span><span class='line'>      cat "${srcdir}/config.x86_64" > ./.config
</span><span class='line'>  else
</span><span class='line'>      cat "${srcdir}/config" > ./.config
</span><span class='line'>  fi
</span><span class='line'>
</span><span class='line'>  ### Optionally use running kernel's config
</span><span class='line'>  # code originally by nous; http://aur.archlinux.org/packages.php?ID=40191
</span><span class='line'>  if [ $_use_current = "y" ]; then
</span><span class='line'>      if [[ -s /proc/config.gz ]]; then
</span><span class='line'>          msg "Extracting config from /proc/config.gz..."
</span><span class='line'>          # modprobe configs
</span><span class='line'>          zcat /proc/config.gz > ./.config
</span><span class='line'>      else
</span><span class='line'>          warning "You kernel was not compiled with IKCONFIG_PROC!"
</span><span class='line'>          warning "You cannot read the current config!"
</span><span class='line'>          warning "Aborting!"
</span><span class='line'>          exit
</span><span class='line'>      fi
</span><span class='line'>  fi
</span><span class='line'>
</span><span class='line'>  if [ "${_kernelname}" != "" ]; then
</span><span class='line'>      sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
</span><span class='line'>  fi
</span><span class='line'>
</span><span class='line'>  ### BFQ to be compiled in but not enabled
</span><span class='line'>  sed -i -e s'/CONFIG_CFQ_GROUP_IOSCHED=y/CONFIG_CFQ_GROUP_IOSCHED=y\nCONFIG_IOSCHED_BFQ=y\nCONFIG_CGROUP_BFQIO=y/' \
</span><span class='line'>      -i -e s'/CONFIG_DEFAULT_CFQ=y/CONFIG_DEFAULT_CFQ=y\n# CONFIG_DEFAULT_BFQ is not set/' ./.config
</span><span class='line'>
</span><span class='line'>  ### Optionally enable BFQ as the default io scheduler
</span><span class='line'>  if [ $_BFQ_enable_ = "y" ]; then
</span><span class='line'>      sed -i -e '/CONFIG_DEFAULT_IOSCHED/ s,cfq,bfq,' \
</span><span class='line'>          -i -e s'/CONFIG_DEFAULT_CFQ=y/# CONFIG_DEFAULT_CFQ is not set\nCONFIG_DEFAULT_BFQ=y/' ./.config
</span><span class='line'>  fi
</span><span class='line'>
</span><span class='line'>  # set extraversion to pkgrel
</span><span class='line'>  sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile
</span><span class='line'>
</span><span class='line'>  # get kernel version
</span><span class='line'>  msg "Running make prepare for you to enable patched options of your choosing"
</span><span class='line'>  make prepare
</span><span class='line'>
</span><span class='line'>  ### Optionally load needed modules for the make localmodconfig
</span><span class='line'>  # See http://aur.archlinux.org/packages.php?ID=41689
</span><span class='line'>  if [ $_localmodcfg = "y" ]; then
</span><span class='line'>      msg "If you have modprobe_db installed, running it in recall mode now"
</span><span class='line'>      if [ -e /usr/bin/modprobed_db ]; then
</span><span class='line'>          [[ ! -x /usr/bin/sudo ]] && echo "Cannot call modprobe with sudo.  Install via pacman -S sudo and configure to work with this user." && exit 1
</span><span class='line'>          sudo /usr/bin/modprobed_db recall
</span><span class='line'>      fi
</span><span class='line'>      msg "Running Steven Rostedt's make localmodconfig now"
</span><span class='line'>      make localmodconfig
</span><span class='line'>  fi
</span><span class='line'>
</span><span class='line'>  if [ $_makenconfig = "y" ]; then
</span><span class='line'>      msg "Running make nconfig"
</span><span class='line'>      make nconfig
</span><span class='line'>  fi
</span><span class='line'>
</span><span class='line'>  msg "Running make bzImage and modules"
</span><span class='line'>  make ${MAKEFLAGS} bzImage modules
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>package_linux-ck() {
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>比较长，但也很易读懂，验证资源文件，解压资源文件，打patch，获取config，最后<code>make
bzImage modules</code>，可以在<code>export MAKEFLAGS="-j4"</code>，充分利用多核cpu加快
编译。读上面的配置文件可以知道，对于32/64的系统，已经提供了默认的
config文件，可以直接修改config，或者以<code>make menuconfig</code>的方式，这里有
个小技巧：</p>

<figure class='code'><figcaption><span>获取依赖的资源并解压  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$tar</span> -xzvf linux-ck-3.3.8-1.src.tar.gz
</span><span class='line'><span class="nv">$cd</span> linux-ck
</span><span class='line'><span class="nv">$makepkg</span> -s
</span></code></pre></td></tr></table></div></figure>


<p>ABS会自动按照PKGBUILD的步骤开始执行，可以在编译真正开始时，终止其执行，
可以在linux-ck目录下，发现src目录，所有patch，kernel源代码都放在这里了，
进入kernel源码目录，<code>make menuconfig</code>就可以对默认的config进行定制修改
了，具体步骤就不赘述了，大家慢慢体会，要注意的是，改了config文件后，记
得把PKGBUILD里相应文件的shasum也更新了。</p>

<p>用这种方法编译出来的kernel，是以<code>.xz</code> package的形式存在，就跟在
<code>/var/cache/pacman/pkg/</code>下的官方package一样，可以很好管理、跟踪。</p>

<p>最后解决休眠恢复的问题的方法，是降级成nvidia-295.53-2的驱动解决的，可以用在
最新的3.4.4-4-ck内核上，确实是驱动的问题，期间换用nouveau的开源驱动也
有同样问题。再之后，升级到更新的nvidia-ck驱动，就没问题了，没有以后了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决octopress的git自动deploy问题]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/12/fix-octopress-git-issuse/"/>
    <updated>2012-07-12T07:05:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/12/fix-octopress-git-issuse</id>
    <content type="html"><![CDATA[<p>已经习惯了在折腾中学习，把遇到的问题看成是学习的机会，有了这种心态，就
不怕麻烦了。昨天晚上为了解决octopress不能<code>rake deploy</code>的问题，搞了几个
小时，搞完了对git的分支的理解得到了提升。</p>

<p>解决完了再回头看，其实我的问题很sb，master branch本来只应该包括<em>deploy
目录里的内容，但我因为误操作把上层目录都变成了master branch，这样就会
在github上自己的blog项目内，看到很多本来不属于blog的文件。当然使用
<code>rake deploy</code>也会出现问题。之前瞎折腾了很久，浪费好多时间，结果还是读
源码解决了问题，Rakefile里<code>setup_github_page</code>和<code>push</code>任务看看，就知道
咋回事了。需要注意的是，除了</em>deploy的其它文件都在source branch里，因为
<code>setup_github_page</code>初始化时把master重命名成了source。</p>

<!-- more -->




<figure class='code'><figcaption><span>my solution  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$rm</span> -rf _deploy
</span><span class='line'><span class="nv">$mkdir</span> _deploy
</span><span class='line'><span class="nv">$cd</span> _deploy
</span><span class='line'><span class="nv">$git</span> init
</span><span class='line'><span class="nv">$echo</span> <span class="s2">&quot;test&quot;</span> &gt; index.html
</span><span class='line'><span class="nv">$git</span> branch -m master
</span><span class='line'><span class="nv">$git</span> commit -m <span class="s2">&quot;octopress init&quot;</span>
</span><span class='line'><span class="nv">$git</span> remote add origin git@github.com:username/username.github.com.git
</span><span class='line'><span class="nv">$git</span> push origin master
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LVS peristent代码分析]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/11/study-on-lvs-kernel-code/"/>
    <updated>2012-07-11T12:24:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/11/study-on-lvs-kernel-code</id>
    <content type="html"><![CDATA[<p>一直纠结于LVS使用persistent时，是以何为依据，决定一个新的连接请求的命运的：是被persistent管理，去到之前的real server，还是被调度算法重新调度，去到新的real server。
代码里其实写得非常清楚：</p>

<h2>Persistent in LVS(ipvs)</h2>

<ul>
<li>fwmark

<ul>
<li>&lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0> 这个六元组，最开始是写死的
ip协议，第一个0是cport，第二个0是dport，就是不在乎cport和dport，
这个daddr值得一提，经过debug发现，这个值为<code>0.0.0.fwmark</code>。</li>
</ul>
</li>
<li>Port zero service &lt;protocol,caddr,0,vaddr,0,daddr,0></li>
<li>non Port zero service

<ul>
<li>FTP &lt;caddr,0,vaddr,0,daddr,0></li>
<li>NON-FTP &lt;caddr,0,vaddr,vport,daddr,dport></li>
</ul>
</li>
</ul>


<!-- more -->


<p>  <br/>
如果是transparent mode，这种透明模式一般都是通过fwmark的方式实现，客户
端是不知道vip的存在的，比如用<code>iptables</code>设置了<code>fwmark</code>为3，则访问
http://sina.com.cn时，<code>daddr</code>就是<code>0.0.0.3</code>。</p>

<p>见代码17，21，77，80行。</p>

<figure class='code'><figcaption><span>/net/netfilter/ipvs/ip_vs_core.c  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * As far as we know, FTP is a very complicated network protocol, and</span>
</span><span class='line'><span class="cm">  * it uses control connection and data connections. For active FTP,</span>
</span><span class='line'><span class="cm">  * FTP server initialize data connection to the client, its source port</span>
</span><span class='line'><span class="cm">  * is often 20. For passive FTP, FTP server tells the clients the port</span>
</span><span class='line'><span class="cm">  * that it passively listens to,  and the client issues the data</span>
</span><span class='line'><span class="cm">  * connection. In the tunneling or direct routing mode, the load</span>
</span><span class='line'><span class="cm">  * balancer is on the client-to-server half of connection, the port</span>
</span><span class='line'><span class="cm">  * number is unknown to the load balancer. So, a conn template like</span>
</span><span class='line'><span class="cm">  * &lt;caddr, 0, vaddr, 0, daddr, 0&gt; is created for persistent FTP</span>
</span><span class='line'><span class="cm">  * service, and a template like &lt;caddr, 0, vaddr, vport, daddr, dport&gt;</span>
</span><span class='line'><span class="cm">  * is created for other persistent services.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="cm">/* Check if a template already exists */</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span> <span class="o">!=</span> <span class="n">FTPPORT</span><span class="p">)</span>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="cm">/* &lt;caddr,0,vaddr,vport,daddr,dport&gt; */</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>        <span class="cm">/* &lt;caddr,0,vaddr,0,daddr,0&gt; */</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ct</span> <span class="o">||</span> <span class="o">!</span><span class="n">ip_vs_check_template</span><span class="p">(</span><span class="n">ct</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * No template found or the dest of the connection</span>
</span><span class='line'><span class="cm">          * template is not available.</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">scheduler</span><span class="o">-&gt;</span><span class="n">schedule</span><span class="p">(</span><span class="n">svc</span><span class="p">,</span> <span class="n">skb</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">dest</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">IP_VS_DBG</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;p-schedule: no dest found.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * Create a template like &lt;protocol,caddr,0,</span>
</span><span class='line'><span class="cm">          * vaddr,vport,daddr,dport&gt; for non-ftp service,</span>
</span><span class='line'><span class="cm">          * and &lt;protocol,caddr,0,vaddr,0,daddr,0&gt;</span>
</span><span class='line'><span class="cm">          * for ftp service.</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span> <span class="o">!=</span> <span class="n">FTPPORT</span><span class="p">)</span>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="n">dest</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="k">else</span>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">ct</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">ct</span><span class="o">-&gt;</span><span class="n">timeout</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">timeout</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/* set destination with the found template */</span>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">ct</span><span class="o">-&gt;</span><span class="n">dest</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">dport</span> <span class="o">=</span> <span class="n">dest</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="cm">/*</span>
</span><span class='line'><span class="cm">      * Note: persistent fwmark-based services and persistent</span>
</span><span class='line'><span class="cm">      * port zero service are handled here.</span>
</span><span class='line'><span class="cm">      * fwmark template: &lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0&gt;</span>
</span><span class='line'><span class="cm">      * port zero template: &lt;protocol,caddr,0,vaddr,0,daddr,0&gt;</span>
</span><span class='line'><span class="cm">      */</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">union</span> <span class="n">nf_inet_addr</span> <span class="n">fwmark</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>              <span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span>
</span><span class='line'>          <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">fwmark</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* &lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0&gt; */</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span>
</span><span class='line'>          <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                       <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* &lt;protocol,caddr,0,vaddr,0,daddr,0&gt; */</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ct</span> <span class="o">||</span> <span class="o">!</span><span class="n">ip_vs_check_template</span><span class="p">(</span><span class="n">ct</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * If it is not persistent port zero, return NULL,</span>
</span><span class='line'><span class="cm">          * otherwise create a connection template.</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">scheduler</span><span class="o">-&gt;</span><span class="n">schedule</span><span class="p">(</span><span class="n">svc</span><span class="p">,</span> <span class="n">skb</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">dest</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">IP_VS_DBG</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;p-schedule: no dest found.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="cm">/*</span>
</span><span class='line'><span class="cm">          * Create a template according to the service</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">union</span> <span class="n">nf_inet_addr</span> <span class="n">fwmark</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>                  <span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">fwmark</span><span class="p">)</span>
</span><span class='line'>              <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">fwmark</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span>
</span><span class='line'>              <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&gt;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="o">&amp;</span><span class="n">dest</span><span class="o">-&gt;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">ct</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">ct</span><span class="o">-&gt;</span><span class="n">timeout</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&gt;</span><span class="n">timeout</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="cm">/* set destination with the found template */</span>
</span><span class='line'>          <span class="n">dest</span> <span class="o">=</span> <span class="n">ct</span><span class="o">-&gt;</span><span class="n">dest</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">dport</span> <span class="o">=</span> <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[寻找揭示linux网络及系统性能的工具]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/11/collection-of-network-performance-tuning-tools/"/>
    <updated>2012-07-11T08:14:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/11/collection-of-network-performance-tuning-tools</id>
    <content type="html"><![CDATA[<h2>Performance Testing</h2>

<ul>
<li><a href="http://www.netperf.org/netperf/">Netperf</a>

<ul>
<li><a href="http://www.ibm.com/developerworks/cn/linux/l-netperf/">Introduction</a></li>
</ul>
</li>
<li><a href="http://blog.yufeng.info/archives/2234">qperf</a></li>
<li><a href="https://github.com/wangbin579/tcpcopy/">Tcpcopy</a>

<ul>
<li><a href="https://code.google.com/p/tcpcopy">old version on googlecode</a></li>
<li>It is an online TCP duplication tool and can be used for testing (using netlink and raw
sockets).And the author claimed it&#8217;s better than <a href="http://httpd.apache.org/docs/2.0/programs/ab.html">ab</a>.</li>
</ul>
</li>
<li><a href="http://redmine.lighttpd.net/projects/weighttp/wiki">Weighhttp</a></li>
</ul>


<h2>System Inspecting</h2>

<ul>
<li><a href="https://www.linuxpowertop.org/powertop/">PowerTop</a></li>
<li><a href="https://latencytop.org">LatencyTop</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=893">Introduction</a></li>
</ul>
</li>
<li><a href="http://sourceware.org/systemtap/">Systemtap</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=477">Introduction</a></li>
<li><a href="http://www.slideshare.net/mryufeng/systemtap">Slides</a></li>
</ul>
</li>
</ul>


<!-- more -->


<h2>Network Inspecting</h2>

<ul>
<li><a href="http://www.percona.com/docs/wiki/tcprstat:start">tcprstat</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=728">Introduction</a></li>
</ul>
</li>
</ul>


<h2>Hardware Inspecting</h2>

<ul>
<li><a href="http://software.intel.com/en-us/articles/intel-64-architecture-processor-topology-enumeration/">cpu-topology</a>

<ul>
<li><a href="http://rdc.taobao.com/blog/cs/?p=460">Introduction</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学写hello world之netfilter模块]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/07/netfilter-hello-world-module/"/>
    <updated>2012-07-07T23:16:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/07/netfilter-hello-world-module</id>
    <content type="html"><![CDATA[<p>对于linux网络的学习，学下写netfilter module更有利于理解，下面开始实战。</p>

<div><script src='https://gist.github.com/3066821.js?file='></script>
<noscript><pre><code>#define __KERNEL__
#define MODULE

#include &lt;linux/module.h&gt;
#include &lt;linux/kernel.h&gt;
#include &lt;linux/netfilter_ipv4.h&gt;
#include &lt;linux/skbuff.h&gt;
#include &lt;linux/udp.h&gt;
#include &lt;linux/ip.h&gt;


static struct nf_hook_ops nfho;      //struct holding set of hook function options
static struct sk_buff *sock_buff;
static struct udphdr *udp_header;
static struct iphdr *ip_header;

//function to be called by hook
unsigned int hook_func(unsigned int hooknum,struct sk_buff **skb, const struct net_device *in, const struct net_device *out, int (*okfn) (struct sk_buff *))
{
    sock_buff = *skb; 
    ip_header = (struct iphdr *)skb_network_header(sock_buff);    
    if(!sock_buff){
        return NF_ACCEPT;
    }
    if(ip_header-&gt;protocol == 17) {
        udp_header = (struct udphdr *)skb_transport_header(sock_buff);
        printk(KERN_INFO &quot;got udp packet.\n&quot;);
        return NF_DROP;
    }else{
        printk(KERN_INFO &quot;packet accept.\n&quot;);
        return NF_ACCEPT;
    }
}

int init_module(void)
{
    printk(KERN_INFO &quot;register hello netfilter module.\n&quot;);
    nfho.hook = hook_func;
    nfho.hooknum = 0 ; // NF_IP_PRE_ROUTING
    nfho.pf = PF_INET;
    nfho.priority = NF_IP_PRI_FIRST;
    nf_register_hook(&amp;nfho);
    return 0;
}

void cleanup_module(void)
{
    printk(KERN_INFO &quot;cleanup hello netfilter module.\n&quot;);
    nf_unregister_hook(&amp;nfho); 
}
</code></pre></noscript></div>




<!-- more -->


<div><script src='https://gist.github.com/3066825.js?file='></script>
<noscript><pre><code>obj-m := hello.o
KDIR := /lib/modules/$(shell uname -r)/build
PWD := $(shell pwd)
default:
    $(MAKE) -C $(KDIR) SUBDIRS=$(PWD) modules

</code></pre></noscript></div>


<p>然后就是</p>

<figure class='code'><figcaption><span>install the module  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#make</span>
</span><span class='line'><span class="c">#insmod hello.ko </span>
</span></code></pre></td></tr></table></div></figure>


<p>我的环境(archlinux64 3.31-ck)编译加载成功，但貌似会导致kernel crash，
哈哈，后面再解决吧，have fun。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用solarized color schema提升工作效率]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/use-solarized-color-schemea-under-archlinux-and-awesome/"/>
    <updated>2012-07-05T17:34:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/use-solarized-color-schemea-under-archlinux-and-awesome</id>
    <content type="html"><![CDATA[<p>貌似<a href="http://www.solarized.com/">solarized</a>已经火了很久，相见狠晚啊，曾
经多么想调整下awesome的focus配色，让它不那么黯然，发现很难，现在终于可以轻松搞定
了。说实话，看不太懂官方网站上的说明，也没力气去了解，发挥下拿来主义吧。</p>

<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-2">
    <img src="http://kevinz.github.com/images/post_img/term.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-2" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/term.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-2").hide();
    jQuery("#image-dialog-2").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-2").click(function() {
      jQuery("#image-dialog-2").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/term.png" width="1680" height="1050"/>
</div>



<!-- more -->


<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-3">
    <img src="http://kevinz.github.com/images/post_img/emacs.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-3" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/emacs.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-3").hide();
    jQuery("#image-dialog-3").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-3").click(function() {
      jQuery("#image-dialog-3").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/emacs.png" width="1680" height="1050"/>
</div>





<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-4">
    <img src="http://kevinz.github.com/images/post_img/vim.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-4" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/vim.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-4").hide();
    jQuery("#image-dialog-4").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-4").click(function() {
      jQuery("#image-dialog-4").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/vim.png" width="1680" height="1050"/>
</div>





<figure class='code'><figcaption><span>Put into .Xresources </span><a href='https://raw.github.com/altercation/solarized/master/xresources-colors-solarized/Xresources'>Xresources </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!! drop in Solarized colorscheme <span class="k">for </span>Xresources/Xdefaults
</span><span class='line'>
</span><span class='line'>!!SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   L*A*B      RGB         HSB
</span><span class='line'>!!--------- ------- ---- -------  ----------- ---------- ----------- -----------
</span><span class='line'>!!base03    <span class="c">#002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21</span>
</span><span class='line'>!!base02    <span class="c">#073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26</span>
</span><span class='line'>!!base01    <span class="c">#586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46</span>
</span><span class='line'>!!base00    <span class="c">#657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51</span>
</span><span class='line'>!!base0     <span class="c">#839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59</span>
</span><span class='line'>!!base1     <span class="c">#93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63</span>
</span><span class='line'>!!base2     <span class="c">#eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93</span>
</span><span class='line'>!!base3     <span class="c">#fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99</span>
</span><span class='line'>!!yellow    <span class="c">#b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71</span>
</span><span class='line'>!!orange    <span class="c">#cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80</span>
</span><span class='line'>!!red       <span class="c">#dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86</span>
</span><span class='line'>!!magenta   <span class="c">#d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83</span>
</span><span class='line'>!!violet    <span class="c">#6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77</span>
</span><span class='line'>!!blue      <span class="c">#268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82</span>
</span><span class='line'>!!cyan      <span class="c">#2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63</span>
</span><span class='line'>!!green     <span class="c">#859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60</span>
</span><span class='line'>
</span><span class='line'><span class="c">#define S_base03        #002b36</span>
</span><span class='line'><span class="c">#define S_base02        #073642</span>
</span><span class='line'><span class="c">#define S_base01        #586e75</span>
</span><span class='line'><span class="c">#define S_base00        #657b83</span>
</span><span class='line'><span class="c">#define S_base0         #839496</span>
</span><span class='line'><span class="c">#define S_base1         #93a1a1</span>
</span><span class='line'><span class="c">#define S_base2         #eee8d5</span>
</span><span class='line'><span class="c">#define S_base3         #fdf6e3</span>
</span><span class='line'><span class="c">#define S_yellow        #b58900</span>
</span><span class='line'><span class="c">#define S_orange        #cb4b16</span>
</span><span class='line'><span class="c">#define S_red           #dc322f</span>
</span><span class='line'><span class="c">#define S_magenta       #d33682</span>
</span><span class='line'><span class="c">#define S_violet        #6c71c4</span>
</span><span class='line'><span class="c">#define S_blue          #268bd2</span>
</span><span class='line'><span class="c">#define S_cyan          #2aa198</span>
</span><span class='line'><span class="c">#define S_green         #859900</span>
</span><span class='line'>
</span><span class='line'>*background:            S_base03
</span><span class='line'>...
</span><span class='line'>URxvt.
</span><span class='line'>...
</span><span class='line'>Emacs.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Use solarized in emacs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(require 'color-theme-solarized)
</span><span class='line'>(color-theme-solarized-light)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Mscgen，以geek的方式画顺序图]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/drawing-message-sequence-chart-in-geek-way/"/>
    <updated>2012-07-05T09:00:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/drawing-message-sequence-chart-in-geek-way</id>
    <content type="html"><![CDATA[<p>相信很多人跟我一样，讨厌写文档，讨厌画图，所以喜欢
<a href="http://www.graphviz.org/">graphviz</a>，<a href="www.doxygen.org/">doxygen</a>这些
自动化工具来生成文档及图形。这两天要画一些很复杂的顺序图，找到我<a href="https://wiki.archlinux.org/index.php/Lightweight_Applications_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29">喜欢</a>的
工具，<a href="http://www.mcternan.me.uk/mscgen/">Mscgen</a>，专为不爱画图，
追求效率的geek设计。</p>

<div><script src='https://gist.github.com/3053976.js?file='></script>
<noscript><pre><code>#MSC for lvs in DR transparent mode
msc{
        hscale = &quot;2&quot;;
        Client,LB,RS,OS;

        Client=&gt;Client [ label = &quot;req(oip:oport)&quot;];
        Client=&gt;Client [ label = &quot;routeto(LB)&quot;];
        Client-&gt;LB [ label = &quot;(cip:cport)-&gt;(oip:oport)&quot;];
        LB=&gt;LB     [ label = &quot;iptable-&gt;fwmark(dst==oip,dst_port=oport)&quot;];
        LB=&gt;LB     [ label = &quot;(cip:cport)-&gt;(oip:oport)+fwmark&quot;];
        LB=&gt;LB     [ label = &quot;trick kernel to receive()&quot;];
        LB=&gt;LB     [ label = &quot;is_match(LB-&gt;fwmark,packet-&gt;fwmark)&quot;];
        LB=&gt;LB     [ label = &quot;belongs_to_an_active_conn?&quot;];
        LB=&gt;LB     [ label = &quot;is_new_conn?&quot;];
        LB=&gt;LB     [ label = &quot;is_persistent?&quot;];
        LB=&gt;LB     [ label = &quot;do_schedule()&quot;];
        LB=&gt;LB     [ label = &quot;decide_rs()&quot;];
        LB=&gt;LB     [ label = &quot;modify-mac(vmac-&gt;rmac)&quot;];
        
        LB-&gt;RS     [ label = &quot;(cip:cport)-&gt;(oip:oport)&quot;];
        --- [ label = &quot;Packet is delivered to real server&quot;];
        ...;
        RS=&gt;RS     [ label = &quot;nf_hook-&gt;dnat(oip-&gt;rip,oport-&gt;rport)&quot;];
        RS=&gt;RS     [ label = &quot;receive()&quot;];
        RS=&gt;RS     [ label = &quot;proxy_www(URI)&quot;];
        RS-&gt;OS     [ label = &quot;(rip_www:rport_www)-&gt;(oip:oport)&quot;];
        --- [ label = &quot;Packet is delivered to the original server&quot;];
        OS-&gt;RS     [ label = &quot;(oip:oport)-&gt;(rip_www:rport_www)&quot;];
        RS=&gt;RS     [ label = &quot;route_to(LB or GW)&quot;];
        --- [ label = &quot;Packet goes back to real server&quot;];
        RS-&gt;LB [ label = &quot;(oip:oport)-&gt;(cip:cport)&quot;];
        RS&gt;&gt;Client [ label = &quot;possible path:(oip:oport)-&gt;(cip:cport)&quot;];
        LB-&gt;Client [ label = &quot;(oip:oport)-&gt;(cip:cport)&quot;];
        --- [ label = &quot;Packet goes back to the client&quot;];
}


</code></pre></noscript></div>




<!-- more -->


<!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-1">
    <img src="http://kevinz.github.com/images/post_img/lvs_transp.png"
         width="600" height="429"
         alt="Click me."/>
  </a>
  <div id="image-dialog-1" style="display:none">
    <img src="http://kevinz.github.com/images/post_img/lvs_transp.png"
         width="1200" height="857"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-1").hide();
    jQuery("#image-dialog-1").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1240,
      minHeight: 897,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-1").click(function() {
      jQuery("#image-dialog-1").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="http://kevinz.github.com/images/post_img/lvs_transp.png" width="1200" height="857"/>
</div>


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用jekyll octopress emacs写blog]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/begin-to-use-jekyll/"/>
    <updated>2012-07-05T07:59:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/begin-to-use-jekyll</id>
    <content type="html"><![CDATA[<p>最近学习的动力大爆发，学了不少东西，应该记录并分享出来，把自己挂在
github上的静态页面换成了强大的jekyll+octopress，捣鼓下开始写东西了，用markdown写
blog的感觉应该很棒。</p>

<p>接下来是开发环境，没错，是按写代码的方式写blog，我用的是emacs +
mardown-mode,非常爽的组合。因为我是用archlinux，用yaourt怎么
一个方便了得。</p>

<figure class='code'><figcaption><span>install ibus-el  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yaourt -S ibus-el
</span></code></pre></td></tr></table></div></figure>




<!-- more -->




<figure class='code'><figcaption><span>ibus-mode configuration </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(require 'ibus)
</span><span class='line'>(add-hook 'after-init-hook 'ibus-mode-on)
</span><span class='line'>(global-set-key (kbd "C-\\") 'ibus-toggle)</span></code></pre></td></tr></table></div></figure>


<p>备注：因为ibus-mode很恼人的context warning问题，已经抛弃它了，直接把
emacs可执行文件包装一下，放在shell里:</p>

<figure class='code'><figcaption><span>my emacs wrapper script </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">#emacs-real is the real original emacs executable</span>
</span><span class='line'><span class="nv">LC_CTYPE</span><span class="o">=</span>zh_CN.UTF-8 /usr/bin/emacs-real
</span></code></pre></td></tr></table></div></figure>


<p>就可以直接使用系统的ibus了，低碳环保还不闹心。</p>

<figure class='code'><figcaption><span>Enable markdown mode </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(autoload 'markdown-mode "markdown-mode.el"
</span><span class='line'>   "Major mode for editing Markdown files" t)
</span><span class='line'>(setq auto-mode-alist
</span><span class='line'>   (cons '("\\.text"  . markdown-mode) auto-mode-alist))
</span><span class='line'>
</span><span class='line'>(setq auto-mode-alist
</span><span class='line'>      (cons '("\\.md"  . markdown-mode) auto-mode-alist))</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
