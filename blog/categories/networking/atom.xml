<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: networking | Code Mind]]></title>
  <link href="http://gekben.gitcd.com/blog/categories/networking/atom.xml" rel="self"/>
  <link href="http://gekben.gitcd.com/"/>
  <updated>2012-11-13T17:20:39+08:00</updated>
  <id>http://gekben.gitcd.com/</id>
  <author>
    <name><![CDATA[Kevin Zeng]]></name>
    <email><![CDATA[kevintech08@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[搭建基于User Mode Linux网络模块开发环境]]></title>
    <link href="http://gekben.gitcd.com/blog/2012/11/13/build-uml-development-environment/"/>
    <updated>2012-11-13T15:40:00+08:00</updated>
    <id>http://gekben.gitcd.com/blog/2012/11/13/build-uml-development-environment</id>
    <content type="html"><![CDATA[<p>最近在写一些内核网络模块，需要一个好用的编译、调试、测试环境，选用了uml，记录一下设置多台uml和host通信，并share fs。
uml基本安装和使用可以参考<a href="https://wiki.archlinux.org/index.php/User-mode_Linux#Setup_by_rootfs_.2B_tap">archlinux uml</a>。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>start uml with vde support  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;先启动虚拟switch&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;vde_switch -s /tmp/switch1 -tap tap0 -m 666&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;启动一台单网卡的uml，已经与之前定义的switch绑定&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;vmlinux <span class="nv">ubd0</span><span class="o">=</span>arch_rootfs1  <span class="nv">mem</span><span class="o">=</span>256M <span class="nv">eth0</span><span class="o">=</span>vde,/tmp/switch1&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;启动一台双网卡的uml，已经与之前定义的switch绑定&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;vmlinux <span class="nv">ubd0</span><span class="o">=</span>arch_rootfs2  <span class="nv">mem</span><span class="o">=</span>256M <span class="nv">eth0</span><span class="o">=</span>vde,/tmp/switch1 <span class="nv">eth1</span><span class="o">=</span>vde,/tmp/switch1&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!-- more -->


<p>启动完成后，在linux里用常规的网络设置方法完成ip地址的分配。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>network configuration  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ifconfig eth0 192.168.0.101 up&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ifconfig eth1 192.168.0.101 up&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;确定host上的tap0已经正确设置并启用&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ifconfig tap0 192.168.0.100 up&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>
完成后用ping测试下，各个uml和host之间的网络通信是否正常。</p>

<p>接下来设置uml与主机的文件系统共享。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>mounting hostfs directory  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;mkdir -p /root/source&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;mount none /root/source/ -t hostfs -o /home/yourname/code/&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>完成后，应该可以读写hostfs的文件，测试一下，放一份linux源代码在host的<code>/home/yourname/code/</code>下，
目录结构是<code>/home/yourname/code/linux</code>，自己写的module的目录在<code>/home/yourname/code/my_module</code>，
对应在uml上的目录就是<code>/root/source/linux</code>和<code>/root/source/my_module</code>。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Makefile of my_module :bash </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>obj-m := test.o #source file is test.c
</span><span class='line'>KDIR := /root/source/linux
</span><span class='line'>PWD := $(shell pwd)
</span><span class='line'>default:&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>    $(MAKE) -C $(KDIR) SUBDIRS=$(PWD) modules
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在<code>/root/source/my_module</code>下<code>make</code>就可以了，在<code>#insmod test.ko</code>测试，如果crash了就<code>kill</code>掉host上的<code>vmlinux</code>进程，非常方便快速。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>kill all vmlinux process  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;killall vmlinux processes <span class="k">if </span>uml can<span class="err">&#39;</span>t be started&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;killall vmlinux&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>当然，gdb也是可以用的，可以参考uml gdb调试相关的介绍。</p>
]]></content>
  </entry>
  
</feed>
