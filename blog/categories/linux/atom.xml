<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Code Mind]]></title>
  <link href="http://kevinz.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://kevinz.github.com/"/>
  <updated>2012-07-14T18:26:08+08:00</updated>
  <id>http://kevinz.github.com/</id>
  <author>
    <name><![CDATA[Kevin Zeng]]></name>
    <email><![CDATA[kevintech08@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[customize-kernel-in-arch-linux]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/14/customize-kernel-in-arch-linux/"/>
    <updated>2012-07-14T16:54:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/14/customize-kernel-in-arch-linux</id>
    <content type="html"><![CDATA[<p>心血来潮升级到
<a href="http://repo-ck.com/x86_64/linux-ck-corex-3.4.4-4-x86_64.pkg.tar.xz">linux-ck_3.4.4-4</a>
后，发现<code>pm-suspend</code>出问题了，可以<code>suspend</code>，但<code>resume</code>后显示屏亮不起
来，其它部分都<code>resume</code>成功了，可以隐约看见一些窗口的黑影。于是我又开始
折腾了，参考了
<a href="https://bbs.archlinux.org/viewtopic.php?id=143545">这篇</a>，插句题外话，
不知道不是巧合，好多问题都是在archlinux的相关论坛上找到了答案，都是一帮爱折腾的同好。</p>

<p>不幸的是，<a href="https://bbs.archlinux.org/viewtopic.php?id=143545">这篇</a>把
我引导向了错误的方向，决定把kernel降级到3.3.x。因为我用的不是官核，不
好找old archive，必须重新编译3.3.x-ck的内核，官方的old archives可以在
<a href="http://arm.konnichi.com/search/">这里</a>寻觅到。</p>

<p>拜<a href="https://wiki.archlinux.org/index.php/Arch_Build_System">Arch Build System</a>
所赐，编译、打包、patch的步骤都可以内置了，对于kernel也是一样。贴一部
分PKGBUILD文件的内容，是从
<a href="http://repo-ck.com/PKG_source/linux-ck/linux-ck-3.3.8-1.src.tar.gz">repo-ck的archive</a>
里找到的。</p>

<!-- more -->


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>PKGBUILD </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h3>PATCH AND BUILD OPTIONS&lt;/h3>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;em>makenconfig="n"    # tweak kernel options prior to a build via nconfig
</span><span class='line'>&lt;/em>localmodcfg="n"    # compile ONLY probed modules
</span><span class='line'>&lt;em>use_current="n"    # use the current kernel's .config file
</span><span class='line'>&lt;/em>BFQ_enable_="n"    # enable BFQ as the default I/O scheduler&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>pkgname=linux-ck
</span><span class='line'>true &amp;&amp; pkgname=(linux-ck linux-ck-headers)
</span><span class='line'>&lt;em>kernelname=-ck
</span><span class='line'>&lt;/em>basekernel=3.3
</span><span class='line'>pkgver=${&lt;em>basekernel}.8
</span><span class='line'>pkgrel=1
</span><span class='line'>arch=('i686' 'x86_64')
</span><span class='line'>url="https://wiki.archlinux.org/index.php/Linux-ck"
</span><span class='line'>license=('GPL2')
</span><span class='line'>options=('!strip')
</span><span class='line'>&lt;/em>ckpatchversion=1
</span><span class='line'>&lt;em>ckpatchname="patch-${&lt;/em>basekernel}-ck${&lt;em>ckpatchversion}"
</span><span class='line'>&lt;/em>bfqpath="http://algo.ing.unimo.it/people/paolo/disk_sched/patches/3.3.0-v3r3"
</span><span class='line'>source=("http://www.kernel.org/pub/linux/kernel/v3.x/linux-3.3.tar.xz"
</span><span class='line'>"http://www.kernel.org/pub/linux/kernel/v3.x/patch-${pkgver}.xz"
</span><span class='line'>"http://ck.kolivas.org/patches/3.0/3.3/${&lt;em>basekernel}-ck${&lt;/em>ckpatchversion}/${&lt;em>ckpatchname}.bz2"
</span><span class='line'>'linux-ck.preset'
</span><span class='line'>'config' 'config.x86_64'
</span><span class='line'>'change-default-console-loglevel.patch'
</span><span class='line'>'i915-fix-ghost-tv-output.patch'
</span><span class='line'>'ext4-options.patch'
</span><span class='line'>'fix-acerhdf-1810T-bios.patch'
</span><span class='line'>"${&lt;/em>bfqpath}/0001-block-cgroups-kconfig-build-bits-for-BFQ-v3r3-3.3.patch"
</span><span class='line'>"${_bfqpath}/0002-block-introduce-the-BFQ-v3r3-I-O-sched-for-3.3.patch")
</span><span class='line'>sha256sums=('355df2085626cdf0083c4bc0fe3017419034b6db5cce6f437ae8234a5e90b40c'&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>        '4bbd173c995f44cb1bc5b002293765e8d8f9f076ae801f35cf456da9f0eba06d'
</span><span class='line'>        'dd23a8e0fc6cdb393a9659d5d097c27e1ff5a0f30d0fe6a3441512a9bf6d00cb'
</span><span class='line'>        'c2cf8cc2600502de348f3dc3aae9a3bde5486759db15cb8a93df7aa35bd6e7da'
</span><span class='line'>        '253b11d36850a9c06ad8861a339da8895ddbb875d4e61579447a26f13423a160'
</span><span class='line'>        '0f6def8badb9939ddb042657fd767c3a07ea7c291ed795935ebc8f81255231d7'
</span><span class='line'>        'b9d79ca33b0b51ff4f6976b7cd6dbb0b624ebf4fbf440222217f8ffc50445de4'
</span><span class='line'>        '9ccadbe3eb30bb283af3eb869c3a4bdb764628854811cc616a2e02e9ef398705'
</span><span class='line'>        '0f15e7462b5d2650c354580920978228b3092bcf47e20e600242c8ca102df6f5'
</span><span class='line'>        'f77e1a1f2d955f0499dc2957d1d65a3eb931212a13948b33916332296d0e4a7a'
</span><span class='line'>        '179e159deaaa3976f5e5e329a640050b9803fef3cc77f8588a949b28c732c5ad'
</span><span class='line'>        'a401732b5bc36eeccbaab86b216295d0ce0b30b8afdae66d8f59a382689da6a4')
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>build() {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>cd "${srcdir}/linux-${_basekernel}"
</span><span class='line'>
</span><span class='line'>msg "Patching with upstream patch ${_basekernel} to ${_basekernel}.4"
</span><span class='line'># add upstream patch
</span><span class='line'>#patch -p1 -i "${srcdir}/patch-${pkgver}"
</span><span class='line'>
</span><span class='line'># add latest fixes from stable queue, if needed
</span><span class='line'>#http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git
</span><span class='line'>
</span><span class='line'>### Patch with BFQ IO Scheduler
</span><span class='line'>msg "Patching source with BFQ patches"
</span><span class='line'>#for p in $(ls ${srcdir}/000{1,2}-block*.patch); do
</span><span class='line'>#   patch -Np1 -i $p
</span><span class='line'>#done
</span><span class='line'>
</span><span class='line'>### Clean tree and copy ARCH config over
</span><span class='line'>msg "Running make mrproper to clean source tree"
</span><span class='line'>make mrproper
</span><span class='line'>
</span><span class='line'>if [ "${CARCH}" = "x86_64" ]; then
</span><span class='line'>    cat "${srcdir}/config.x86_64" &gt; ./.config
</span><span class='line'>else
</span><span class='line'>    cat "${srcdir}/config" &gt; ./.config
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>### Optionally use running kernel's config
</span><span class='line'># code originally by nous; http://aur.archlinux.org/packages.php?ID=40191
</span><span class='line'>if [ $_use_current = "y" ]; then
</span><span class='line'>    if [[ -s /proc/config.gz ]]; then
</span><span class='line'>        msg "Extracting config from /proc/config.gz..."
</span><span class='line'>        # modprobe configs
</span><span class='line'>        zcat /proc/config.gz &gt; ./.config
</span><span class='line'>    else
</span><span class='line'>        warning "You kernel was not compiled with IKCONFIG_PROC!"
</span><span class='line'>        warning "You cannot read the current config!"
</span><span class='line'>        warning "Aborting!"
</span><span class='line'>        exit
</span><span class='line'>    fi
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>if [ "${_kernelname}" != "" ]; then
</span><span class='line'>    sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>### BFQ to be compiled in but not enabled
</span><span class='line'>sed -i -e s'/CONFIG_CFQ_GROUP_IOSCHED=y/CONFIG_CFQ_GROUP_IOSCHED=y\nCONFIG_IOSCHED_BFQ=y\nCONFIG_CGROUP_BFQIO=y/' \
</span><span class='line'>    -i -e s'/CONFIG_DEFAULT_CFQ=y/CONFIG_DEFAULT_CFQ=y\n# CONFIG_DEFAULT_BFQ is not set/' ./.config
</span><span class='line'>
</span><span class='line'>### Optionally enable BFQ as the default io scheduler
</span><span class='line'>if [ $_BFQ_enable_ = "y" ]; then
</span><span class='line'>    sed -i -e '/CONFIG_DEFAULT_IOSCHED/ s,cfq,bfq,' \
</span><span class='line'>        -i -e s'/CONFIG_DEFAULT_CFQ=y/# CONFIG_DEFAULT_CFQ is not set\nCONFIG_DEFAULT_BFQ=y/' ./.config
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'># set extraversion to pkgrel
</span><span class='line'>sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile
</span><span class='line'>
</span><span class='line'># get kernel version
</span><span class='line'>msg "Running make prepare for you to enable patched options of your choosing"
</span><span class='line'>make prepare
</span><span class='line'>
</span><span class='line'>### Optionally load needed modules for the make localmodconfig
</span><span class='line'># See http://aur.archlinux.org/packages.php?ID=41689
</span><span class='line'>if [ $_localmodcfg = "y" ]; then
</span><span class='line'>    msg "If you have modprobe_db installed, running it in recall mode now"
</span><span class='line'>    if [ -e /usr/bin/modprobed_db ]; then
</span><span class='line'>        [[ ! -x /usr/bin/sudo ]] &amp;&amp; echo "Cannot call modprobe with sudo.  Install via pacman -S sudo and configure to work with this user." &amp;&amp; exit 1
</span><span class='line'>        sudo /usr/bin/modprobed_db recall
</span><span class='line'>    fi
</span><span class='line'>    msg "Running Steven Rostedt's make localmodconfig now"
</span><span class='line'>    make localmodconfig
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>if [ $_makenconfig = "y" ]; then
</span><span class='line'>    msg "Running make nconfig"
</span><span class='line'>    make nconfig
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>msg "Running make bzImage and modules"
</span><span class='line'>make ${MAKEFLAGS} bzImage modules
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>package_linux-ck() {
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>比较长，但也很易读懂，验证资源文件，解压资源文件，打patch，获取config，最后<code>make
bzImage modules</code>，可以在<code>export MAKEFLAGS="-j4"</code>，充分利用多核cpu加快
编译。读上面的配置文件可以知道，对于32/64的系统，已经提供了默认的
config文件，可以直接修改config，或者以<code>make menuconfig</code>的方式，这里有
个小技巧：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>获取依赖的资源并解压  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$tar</span> -xzvf linux-ck-3.3.8-1.src.tar.gz
</span><span class='line'><span class="nv">$cd</span> linux-ck
</span><span class='line'><span class="nv">$makepkg</span> -s
</span></code></pre></td></tr></table></div></figure></notextile></div>
ABS会自动按照PKGBUILD的步骤开始执行，可以在编译真正开始时，终止其执行，
可以在linux-ck目录下，发现src目录，所有patch，kernel源代码都放在这里了，
进入kernel源码目录，<code>make menuconfig</code>就可以对默认的config进行定制修改
了，具体步骤就不赘述了，大家慢慢体会。</p>

<p>用这种方法编译出来的kernel，是以<code>.xz</code> package的形式存在，就跟在
<code>/var/cache/pacman/pkg/</code>下的官方package一样，可以很好管理、跟踪。</p>

<p>最后解决休眠恢复的问题，是降级成nvidia-295.53-2的驱动解决的，可以用在
最新的3.4.4-4-ck内核上，确实是驱动的问题，期间换用nouveau的开源驱动也
有同样问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Study on LVS kernel code - persistent]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/11/study-on-lvs-kernel-code/"/>
    <updated>2012-07-11T12:24:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/11/study-on-lvs-kernel-code</id>
    <content type="html"><![CDATA[<p>一直纠结于LVS使用persistent时，是以何为依据，决定一个新的连接请求的命运的：是被persistent管理，去到之前的real server，还是被调度算法重新调度，去到新的real server。
代码里其实写得非常清楚：</p>

<h2>Persistent in LVS(ipvs)</h2>

<ul>
<li>fwmark

<ul>
<li>&lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0> 这个六元组，最开始是写死的ip协议，第一个0是cport，第二个0是dport，就是不在乎cport和dport。</li>
</ul>
</li>
<li>Port zero service &lt;protocol,caddr,0,vaddr,0,daddr,0></li>
<li>non Port zero service

<ul>
<li>FTP &lt;caddr,0,vaddr,0,daddr,0></li>
<li>NON-FTP &lt;caddr,0,vaddr,vport,daddr,dport></li>
</ul>
</li>
</ul>


<!-- more -->


<p>  <br/>
我自己的理解，daddr和dport就是请求的目的地址和端口，如果客户端请求vaddr:vport，比如在浏览器上请求http://vaddr:vport,那daddr和dport就分别和vaddr和vport相同，
如果是透明模式，客户端不知道vip的存在，比如访问http://sina.com.cn，daddr就是sina.com.cn，dport就是80，这种透明模式一般都是通过fwmark的方式实现。</p>

<p>见代码17，21，77，80行。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/net/netfilter/ipvs/ip_vs_core.c  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * As far as we know, FTP is a very complicated network protocol, and</span>
</span><span class='line'><span class="cm"> * it uses control connection and data connections. For active FTP,</span>
</span><span class='line'><span class="cm"> * FTP server initialize data connection to the client, its source port</span>
</span><span class='line'><span class="cm"> * is often 20. For passive FTP, FTP server tells the clients the port</span>
</span><span class='line'><span class="cm"> * that it passively listens to,  and the client issues the data</span>
</span><span class='line'><span class="cm"> * connection. In the tunneling or direct routing mode, the load</span>
</span><span class='line'><span class="cm"> * balancer is on the client-to-server half of connection, the port</span>
</span><span class='line'><span class="cm"> * number is unknown to the load balancer. So, a conn template like</span>
</span><span class='line'><span class="cm"> * &amp;lt;caddr, 0, vaddr, 0, daddr, 0&amp;gt; is created for persistent FTP</span>
</span><span class='line'><span class="cm"> * service, and a template like &amp;lt;caddr, 0, vaddr, vport, daddr, dport&amp;gt;</span>
</span><span class='line'><span class="cm"> * is created for other persistent services.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">port</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="cm">/* Check if a template already exists */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">port</span> <span class="o">!=</span> <span class="n">FTPPORT</span><span class="p">)</span>
</span><span class='line'>        <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                     <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="cm">/* &amp;lt;caddr,0,vaddr,vport,daddr,dport&amp;gt; */</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                     <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>        <span class="cm">/* &amp;lt;caddr,0,vaddr,0,daddr,0&amp;gt; */</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ct</span> <span class="o">||</span> <span class="o">!</span><span class="n">ip_vs_check_template</span><span class="p">(</span><span class="n">ct</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * No template found or the dest of the connection</span>
</span><span class='line'><span class="cm">         * template is not available.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="n">dest</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">scheduler</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">schedule</span><span class="p">(</span><span class="n">svc</span><span class="p">,</span> <span class="n">skb</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">dest</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">IP_VS_DBG</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;p-schedule: no dest found.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * Create a template like &amp;lt;protocol,caddr,0,</span>
</span><span class='line'><span class="cm">         * vaddr,vport,daddr,dport&amp;gt; for non-ftp service,</span>
</span><span class='line'><span class="cm">         * and &amp;lt;protocol,caddr,0,vaddr,0,daddr,0&amp;gt;</span>
</span><span class='line'><span class="cm">         * for ftp service.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">port</span> <span class="o">!=</span> <span class="n">FTPPORT</span><span class="p">)</span>
</span><span class='line'>            <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">dest</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">addr</span><span class="p">,</span> <span class="n">dest</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">port</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">dest</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">ct</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ct</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/* set destination with the found template */</span>
</span><span class='line'>        <span class="n">dest</span> <span class="o">=</span> <span class="n">ct</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">dest</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">dport</span> <span class="o">=</span> <span class="n">dest</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">port</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * Note: persistent fwmark-based services and persistent</span>
</span><span class='line'><span class="cm">     * port zero service are handled here.</span>
</span><span class='line'><span class="cm">     * fwmark template: &amp;lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0&amp;gt;</span>
</span><span class='line'><span class="cm">     * port zero template: &amp;lt;protocol,caddr,0,vaddr,0,daddr,0&amp;gt;</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">fwmark</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">union</span> <span class="n">nf_inet_addr</span> <span class="n">fwmark</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">fwmark</span><span class="p">)</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                     <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">fwmark</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* &amp;lt;IPPROTO_IP,caddr,0,fwmark,0,daddr,0&amp;gt; */</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span>
</span><span class='line'>        <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_ct_in_get</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                     <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* &amp;lt;protocol,caddr,0,vaddr,0,daddr,0&amp;gt; */</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ct</span> <span class="o">||</span> <span class="o">!</span><span class="n">ip_vs_check_template</span><span class="p">(</span><span class="n">ct</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * If it is not persistent port zero, return NULL,</span>
</span><span class='line'><span class="cm">         * otherwise create a connection template.</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">dest</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">scheduler</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">schedule</span><span class="p">(</span><span class="n">svc</span><span class="p">,</span> <span class="n">skb</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">dest</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">IP_VS_DBG</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;p-schedule: no dest found.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">         * Create a template according to the service</span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">fwmark</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">union</span> <span class="n">nf_inet_addr</span> <span class="n">fwmark</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>                <span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">fwmark</span><span class="p">)</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">fwmark</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">dest</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span>
</span><span class='line'>            <span class="n">ct</span> <span class="o">=</span> <span class="n">ip_vs_conn_new</span><span class="p">(</span><span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">af</span><span class="p">,</span> <span class="n">iph</span><span class="p">.</span><span class="n">protocol</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">snet</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">iph</span><span class="p">.</span><span class="n">daddr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">dest</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">addr</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">IP_VS_CONN_F_TEMPLATE</span><span class="p">,</span>
</span><span class='line'>                        <span class="n">dest</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">ct</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ct</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout</span> <span class="o">=</span> <span class="n">svc</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">timeout</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/* set destination with the found template */</span>
</span><span class='line'>        <span class="n">dest</span> <span class="o">=</span> <span class="n">ct</span><span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span><span class="n">dest</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">dport</span> <span class="o">=</span> <span class="n">ports</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netfilter hello world module]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/07/netfilter-hello-world-module/"/>
    <updated>2012-07-07T23:16:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/07/netfilter-hello-world-module</id>
    <content type="html"><![CDATA[<p>对于linux网络的学习，学下写netfilter module更有利于理解，下面开始实战。
<div><script src='https://gist.github.com/3066821.js?file='></script>
<noscript><pre><code>#define __KERNEL__
#define MODULE

#include &lt;linux/module.h&gt;
#include &lt;linux/kernel.h&gt;
#include &lt;linux/netfilter_ipv4.h&gt;
#include &lt;linux/skbuff.h&gt;
#include &lt;linux/udp.h&gt;
#include &lt;linux/ip.h&gt;


static struct nf_hook_ops nfho;      //struct holding set of hook function options
static struct sk_buff *sock_buff;
static struct udphdr *udp_header;
static struct iphdr *ip_header;

//function to be called by hook
unsigned int hook_func(unsigned int hooknum,struct sk_buff **skb, const struct net_device *in, const struct net_device *out, int (*okfn) (struct sk_buff *))
{
    sock_buff = *skb; 
    ip_header = (struct iphdr *)skb_network_header(sock_buff);    
    if(!sock_buff){
        return NF_ACCEPT;
    }
    if(ip_header-&gt;protocol == 17) {
        udp_header = (struct udphdr *)skb_transport_header(sock_buff);
        printk(KERN_INFO &quot;got udp packet.\n&quot;);
        return NF_DROP;
    }else{
        printk(KERN_INFO &quot;packet accept.\n&quot;);
        return NF_ACCEPT;
    }
}

int init_module(void)
{
    printk(KERN_INFO &quot;register hello netfilter module.\n&quot;);
    nfho.hook = hook_func;
    nfho.hooknum = 0 ; // NF_IP_PRE_ROUTING
    nfho.pf = PF_INET;
    nfho.priority = NF_IP_PRI_FIRST;
    nf_register_hook(&amp;nfho);
    return 0;
}

void cleanup_module(void)
{
    printk(KERN_INFO &quot;cleanup hello netfilter module.\n&quot;);
    nf_unregister_hook(&amp;nfho); 
}
</code></pre></noscript></div>
</p>

<!-- more -->


<p><div><script src='https://gist.github.com/3066825.js?file='></script>
<noscript><pre><code>obj-m := hello.o
KDIR := /lib/modules/$(shell uname -r)/build
PWD := $(shell pwd)
default:
	$(MAKE) -C $(KDIR) SUBDIRS=$(PWD) modules

</code></pre></noscript></div>
</p>

<p>然后就是
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install the module  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;make&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;insmod hello.ko&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我的环境(archlinux64 3.31-ck)编译加载成功，但貌似会导致kernel crash，
哈哈，后面再解决吧，have fun。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Solarized Color Schemea under ArchLinux and Awesome]]></title>
    <link href="http://kevinz.github.com/blog/2012/07/05/use-solarized-color-schemea-under-archlinux-and-awesome/"/>
    <updated>2012-07-05T17:34:00+08:00</updated>
    <id>http://kevinz.github.com/blog/2012/07/05/use-solarized-color-schemea-under-archlinux-and-awesome</id>
    <content type="html"><![CDATA[<p>貌似<a href="http://www.solarized.com/">solarized</a>已经火了很久，相见狠晚啊，曾
经多么想调整下awesome的focus配色，让它不那么黯然，发现很难，现在终于可以轻松搞定
了。说实话，看不太懂官方网站上的说明，也没力气去了解，发挥下拿来主义吧。</p>

<p><div class='bogus-wrapper'><notextile><!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-6">
    <img src="/images/post_img/term.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-6" style="display:none">
    <img src="/images/post_img/term.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-6").hide();
    jQuery("#image-dialog-6").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-6").click(function() {
      jQuery("#image-dialog-6").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="/images/post_img/term.png" width="1680" height="1050"/>
</div>
</notextile></div></p>

<!-- more -->


<p><div class='bogus-wrapper'><notextile><!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-7">
    <img src="/images/post_img/emacs.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-7" style="display:none">
    <img src="/images/post_img/emacs.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-7").hide();
    jQuery("#image-dialog-7").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-7").click(function() {
      jQuery("#image-dialog-7").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="/images/post_img/emacs.png" width="1680" height="1050"/>
</div>
</notextile></div></p>

<p><div class='bogus-wrapper'><notextile><!-- -*- html -*- -->

<div class="imgpopup screen">
  <div class="caption">Click the image for a larger view.</div>
  <a href='javascript:void(0)' style="text-decoration: none" id="image-8">
    <img src="/images/post_img/vim.png"
         width="840" height="525"
         alt="Click me."/>
  </a>
  <div id="image-dialog-8" style="display:none">
    <img src="/images/post_img/vim.png"
         width="1680" height="1050"/>
    <br clear="all"/>
  </div>
</div>
<script type="text/javascript">
  jQuery(document).ready(function() {
    jQuery("#image-dialog-8").hide();
    jQuery("#image-dialog-8").dialog({
      autoOpen:  false,
      modal:     true,
      draggable: false,
      minWidth:  1720,
      minHeight: 1090,
      show:      'scale',
      hide:      'scale'
    });

    jQuery("#image-8").click(function() {
      jQuery("#image-dialog-8").dialog('open');
    });

  });
</script>
<div class="illustration print" style="display:none">
  <img src="/images/post_img/vim.png" width="1680" height="1050"/>
</div>
</notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Put into .Xresources </span><a href='https://raw.github.com/altercation/solarized/master/xresources-colors-solarized/Xresources'>Xresources </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!! drop in Solarized colorscheme <span class="k">for </span>Xresources/Xdefaults&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;!!SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   L&lt;em&gt;A&lt;/em&gt;B      RGB         HSB
</span><span class='line'>!!--------- ------- ---- -------  ----------- ---------- ----------- -----------
</span><span class='line'>!!base03    <span class="c">#002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21</span>
</span><span class='line'>!!base02    <span class="c">#073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26</span>
</span><span class='line'>!!base01    <span class="c">#586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46</span>
</span><span class='line'>!!base00    <span class="c">#657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51</span>
</span><span class='line'>!!base0     <span class="c">#839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59</span>
</span><span class='line'>!!base1     <span class="c">#93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63</span>
</span><span class='line'>!!base2     <span class="c">#eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93</span>
</span><span class='line'>!!base3     <span class="c">#fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99</span>
</span><span class='line'>!!yellow    <span class="c">#b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71</span>
</span><span class='line'>!!orange    <span class="c">#cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80</span>
</span><span class='line'>!!red       <span class="c">#dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86</span>
</span><span class='line'>!!magenta   <span class="c">#d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83</span>
</span><span class='line'>!!violet    <span class="c">#6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77</span>
</span><span class='line'>!!blue      <span class="c">#268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82</span>
</span><span class='line'>!!cyan      <span class="c">#2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63</span>
</span><span class='line'>!!green     <span class="c">#859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base03        <span class="c">#002b36&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base02        <span class="c">#073642&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base01        <span class="c">#586e75&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base00        <span class="c">#657b83&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base0         <span class="c">#839496&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base1         <span class="c">#93a1a1&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base2         <span class="c">#eee8d5&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_base3         <span class="c">#fdf6e3&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_yellow        <span class="c">#b58900&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_orange        <span class="c">#cb4b16&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_red           <span class="c">#dc322f&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_magenta       <span class="c">#d33682&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_violet        <span class="c">#6c71c4&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_blue          <span class="c">#268bd2&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_cyan          <span class="c">#2aa198&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;define S_green         <span class="c">#859900&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;*background:            S_base03
</span><span class='line'>...
</span><span class='line'>URxvt.
</span><span class='line'>...
</span><span class='line'>Emacs.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Use solarized in emacs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(require 'color-theme-solarized)
</span><span class='line'>(color-theme-solarized-light)</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
