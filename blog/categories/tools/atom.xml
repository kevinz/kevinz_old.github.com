<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | Code Mind]]></title>
  <link href="http://gekben.gitcd.com/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://gekben.gitcd.com/"/>
  <updated>2012-08-16T21:56:41+08:00</updated>
  <id>http://gekben.gitcd.com/</id>
  <author>
    <name><![CDATA[Kevin Zeng]]></name>
    <email><![CDATA[kevintech08@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在SUSE Enterprise上安装Systemtap，解决build-id mismatch]]></title>
    <link href="http://gekben.gitcd.com/blog/2012/08/16/install-systemtap-on-suse/"/>
    <updated>2012-08-16T20:49:00+08:00</updated>
    <id>http://gekben.gitcd.com/blog/2012/08/16/install-systemtap-on-suse</id>
    <content type="html"><![CDATA[<p>最近做LVS的性能测试，自然会用的各种工具检视系统状态，用了很多工具，都
不甚满意，于是想尝试下Systemtap，系统环境是SUSE Enterprise SP2,已经3.0的
kernel，可以search到的suse上安装systemtap的内容不多，碰到问题并解决了
的更是少，自然我又要成为苦逼的问题解决者了。</p>

<h2>正常安装的步骤是</h2>

<ul>
<li>添加suse enterprise的包含debuginfo的iso，有几个G啊</li>
<li><code>zypper in kernel-default-debuginfo</code></li>
<li><code>zypper in systemtap</code></li>
</ul>


<p>当我做完了以上这些，运行一个简单的脚本时:</p>

<p>{% codeblock systemtap hello_world lang:bash %}
sudo stap -ve 'probe begin { log("hello world") exit() }'
{% endcodeblock  %}</p>

<p>这个简单的例子是ok的，因为它不会涉及到systemtap的pass5，与kernel
module交互。跑下面这个的时候，就不行了:
{% codeblock systemtap hello_world lang:bash %}
stap -v -e 'probe vfs.read {printf("has VFS read()\n"); exit()}'
{% endcodeblock  %}
会报出类似<code>ERROR: Build-id mismatch: "kernel" vs. "vmlinux" byte 0 (0xf9 vs 0xa2)</code>的问题，关于build-id mismatch这个问题，还是可以
搜索到不少资料的，不过告诉如何解决的也不多。先说明下这个问题，
<code>kernel-default-debuginfo</code>里面是附赠了一个kernel elf文件的，在SUSE里，
安装后放在<code>/usr/lib/debug/boot/vmlinux-3.0.13-0.27-default.debug</code>，这
是debug版本的kernel vmlinux文件，是elf原始文件，未经压缩。<code>stap</code>运行时会去检查它的。
执行<code>eu-readelf -n
/usr/lib/debug/boot/vmlinux-3.0.13-0.27-default.debug</code>，可以拿到的
build-id，执行结果的第一个字节是<code>f9</code>，那另外一个<code>a2</code>是从哪里得出来的，猜想应该和当
前运行的kernel有关，于是拿到当前运行的vmlinux的压缩文件，解压后检查
build-id：
{% codeblock check build-id lang:bash %}
   gunzip /boot/vmlinux-3.0.13-0.27-default.gz
   eu-readelf -n /boot/vmlinux-3.0.13-0.27-default
{% endcodeblock %}
执行结果也是<code>f9</code>，是对得上的啊。</p>

<p>但是注意，这份.gz文件是SUSE附赠的，跟当前跑的vmlinz文件没有关系，于是
开始打vmlinuz文件的主意，得先想办法把vmlinuz->vmlinux，及bzImage到elf，
才能去取它的build-id，
<a href="%E8%BF%99%E9%87%8C">https://www.globalways.net/blog/archives/76-Extracting-bzImage-from-vmlinuz.html</a>有可行的方法。
<code>eu-readelf -n vmlinux-unpacked</code>的结果果然是<code>a2</code>，我只能是怀疑SUSE给的
默认vmlinuz有问题了，不能和SUSE提供的用于debuginfo的vmlinux匹配。</p>

<p>只能另外想办法，其实systemtap做kernel mismatch判断的关键代码，就在:</p>

<p>{% codeblock systemtap/runtime/sym.c lang:c %}
static int <em>stp_build_id_check (struct </em>stp_module *m,</p>

<pre><code>        unsigned long notes_addr,
        struct task_struct *tsk)
</code></pre>

<p>{
...
/<em> just hack it </em>/
if (rc || (theory != practice)) {</p>

<pre><code>  const char *basename;
  basename = strrchr(m-&gt;path, '/');
  if (basename)
</code></pre>

<p>|   basename++;</p>

<pre><code>  else
</code></pre>

<p>|   basename = m->path;</p>

<h1>if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27)</h1>

<pre><code>  _stp_error ("Build-id mismatch: \"%s\" vs. \"%s\" byte %d (0x%02x vs 0x%02x) address %#lx rc %d\n",
</code></pre>

<p>|   |     m->name, basename, j, theory, practice, notes_addr, rc);</p>

<pre><code>  return 1;
</code></pre>

<h1>else</h1>

<pre><code>  /* This branch is a surrogate for kernels affected by Fedora bug
   * #465873. */
  _stp_warn (KERN_WARNING
</code></pre>

<p>|   |    "Build-id mismatch: \"%s\" vs. \"%s\" byte %d (0x%02x vs 0x%02x) rc %d\n",
|   |    m->name, basename, j, theory, practice, rc);</p>

<h1>endif</h1>

<pre><code>  break;
} /* end mismatch */
</code></pre>

<p>{% endcodeblock %}</p>

<p>关键就在于<code>if (rc || (theory != practice))</code>，小小修改的一下，写成:
<code>if (0 &amp;&amp; (rc || (theory != practice)))</code>就OK了，绕过了检查。然后重新编
译systemtap，直接用的SUSE提供的老版本的源码，新的会有问题，注意还要用
到SUSE提供的<code>libdwfl</code>的source code，才能完成编译，编译时在
<code>/usr/src/packages/SOURCES/elfutils-0.152/libdwfl/linux-kernel-modules.c</code>
文件上遇到了问题，稍作修改就可过关。尝试下新编译出来的<code>stap</code>，完全OK，它是不知
道'build-id mismatch`为何物的，敢这样改也就是因为都是offical的东西，本
应该match得上，应该不会出什么大问题，实践中检验吧。</p>

<p>Have fun.</p>
]]></content>
  </entry>
  
</feed>
